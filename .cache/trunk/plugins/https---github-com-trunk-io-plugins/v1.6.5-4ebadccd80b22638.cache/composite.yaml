version: 0.1
required_trunk_version: ">=1.22.2-beta.5"
downloads:
  - name: 1password-cli
    downloads:
      - os:
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://cache.agilebits.com/dist/1P/op2/pkg/v${version}/op_${os}_${cpu}_v${version}.zip
      - os:
          windows: windows
        cpu:
          x86_64: amd64
        url: https://cache.agilebits.com/dist/1P/op2/pkg/v${version}/op_${os}_${cpu}_v${version}.zip
  - name: act
    downloads:
      - os:
          linux: Linux
          macos: Darwin
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://github.com/nektos/act/releases/download/v${version}/act_${os}_${cpu}.tar.gz
      - os:
          windows: Windows
        cpu:
          arm_64: arm64
        url: https://github.com/nektos/act/releases/download/v${version}/act_${os}_${cpu}.zip
        version: ">=0.2.49"
      - os:
          windows: Windows
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://github.com/nektos/act/releases/download/v${version}/act_${os}_${cpu}.zip
        version: <=0.2.48
  - name: action-validator
    executable: true
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/mpalmer/action-validator/releases/download/v${version}/action-validator_${os}_${cpu}
  - name: actionlint
    version: 1.6.9
    downloads:
      - os:
          macos: ""
        url: https://github.com/rhysd/actionlint/releases/download/v${version}/actionlint_${version}_darwin_amd64.tar.gz
        version: <1.4.1
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/rhysd/actionlint/releases/download/v${version}/actionlint_${version}_${os}_${cpu}.tar.gz
      - os:
          windows: ""
        url: https://github.com/rhysd/actionlint/releases/download/v${version}/actionlint_${version}_windows_386.zip
  - name: adr
    downloads:
      - os:
          linux: linux
          macos: darwin
        url: https://github.com/npryce/adr-tools/archive/${version}.tar.gz
        strip_components: 1
  - name: age
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/FiloSottile/age/releases/download/v${version}/age-v${version}-${os}-${cpu}.tar.gz
        strip_components: 1
      - os:
          windows: ""
        cpu:
          x86_64: amd64
        url: https://github.com/FiloSottile/age/releases/download/v${version}/age-v${version}-windows-${cpu}.zip
        strip_components: 1
  - name: agebox
    executable: true
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/slok/agebox/releases/download/v${version}/agebox-${os}-${cpu}
      - os:
          windows: windows
        cpu:
          x86_64: amd64
        url: https://github.com/slok/agebox/releases/download/v${version}/agebox-${os}-${cpu}.exe
  - name: air
    executable: true
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/cosmtrek/air/releases/download/v${version}/air_${version}_${os}_${cpu}
  - name: alp
    downloads:
      - os:
          macos: darwin
          linux: linux
          windows: windows
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/tkuchiki/alp/releases/download/v${version}/alp_${os}_${cpu}.tar.gz
  - name: amazon-ecr-credential-helper
    executable: true
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://amazon-ecr-credential-helper-releases.s3.us-east-2.amazonaws.com/${version}/${os}-${cpu}/docker-credential-ecr-login
  - name: assh
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/moul/assh/releases/download/v${version}/assh_${version}_${os}_${cpu}.tar.gz
  - name: bazel
    executable: true
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          arm_64: arm64
          x86_64: x86_64
        url: https://github.com/bazelbuild/bazel/releases/download/${version}/bazel-${version}-${os}-${cpu}
      - os:
          windows: windows
        cpu:
          arm_64: arm64
          x86_64: x86_64
        url: https://github.com/bazelbuild/bazel/releases/download/${version}/bazel-${version}-${os}-${cpu}.exe
  - name: buildifier
    version: 6.1.0
    executable: true
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/bazelbuild/buildtools/releases/download/v${version}/buildifier-${os}-${cpu}
        version: ">=6.1.2"
      - os:
          macos: ""
        url: https://github.com/bazelbuild/buildtools/releases/download/${version}/buildifier-darwin-amd64
        version: <4.2.0
      - os:
          macos: darwin
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/bazelbuild/buildtools/releases/download/${version}/buildifier-${os}-${cpu}
        version: ">=4.0.0"
      - os:
          windows: ""
        cpu:
          x86_64: ""
        url: https://github.com/bazelbuild/buildtools/releases/download/v${version}/buildifier-windows-amd64.exe
        version: ">=6.1.2"
      - os:
          windows: ""
        cpu:
          x86_64: ""
        url: https://github.com/bazelbuild/buildtools/releases/download/${version}/buildifier-windows-amd64.exe
        version: ">=4.0.0"
  - name: circleci
    downloads:
      - os:
          linux: linux
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/CircleCI-Public/circleci-cli/releases/download/v${version}/circleci-cli_${version}_${os}_${cpu}.tar.gz
        strip_components: 1
      - os:
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/CircleCI-Public/circleci-cli/releases/download/v${version}/circleci-cli_${version}_${os}_${cpu}.tar.gz
        version: ">=0.1.28528"
        strip_components: 1
      - os:
          macos: darwin
        cpu:
          x86_64: amd64
        url: https://github.com/CircleCI-Public/circleci-cli/releases/download/v${version}/circleci-cli_${version}_${os}_${cpu}.tar.gz
        strip_components: 1
      - os:
          windows: windows
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/CircleCI-Public/circleci-cli/releases/download/v${version}/circleci-cli_${version}_${os}_${cpu}.zip
        version: ">=0.1.28528"
        strip_components: 1
      - os:
          windows: windows
        cpu:
          x86_64: amd64
        url: https://github.com/CircleCI-Public/circleci-cli/releases/download/v${version}/circleci-cli_${version}_${os}_${cpu}.zip
        strip_components: 1
  - name: clang-format
    version: 14.0.1
    downloads:
      - os:
          macos: ""
        url: https://trunk.io/releases/clang-format-${version}-macos-x86_64.tar.gz
        version: <14.0.0
      - os:
          linux: linux
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://trunk.io/releases/clang-format-${version}-${os}-${cpu}.tar.gz
      - os:
          macos: macos
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://trunk.io/releases/clang-format-${version}-${os}-${cpu}.tar.gz
  - name: clang-tidy
    version: 15.0.6
    downloads:
      - os:
          macos: ""
        url: https://trunk.io/releases/clang-tidy-${version}-macos-x86_64.tar.gz
        version: <14.0.0
      - os:
          linux: linux
        cpu:
          x86_64: x86_64
          arm_64: aarch64
        url: https://trunk.io/releases/clang-tidy-${version}-${os}-${cpu}.tar.gz
      - os:
          macos: macos
        cpu:
          arm_64: arm64
          x86_64: x86_64
        url: https://trunk.io/releases/clang-tidy-${version}-${os}-${cpu}.tar.gz
  - name: clangd
    downloads:
      - os:
          windows: windows
          linux: linux
          macos: mac
        url: https://github.com/clangd/clangd/releases/download/${version}/clangd-${os}-${version}.zip
        strip_components: 1
  - name: clangd-indexing-tools
    downloads:
      - os:
          linux: linux
          macos: mac
          windows: windows
        url: https://github.com/clangd/clangd/releases/download/${version}/clangd_indexing_tools-${os}-${version}.zip
        strip_components: 1
  - name: composer
    version: 2.5.1
    executable: true
    downloads:
      - version: 2.5.1
        gpg: CBB3D576F2A0946F
  - name: converttosarif
    downloads:
      - os:
          macos: macos
          linux: linux
          windows: windows
        url: https://psg-prod-eastus.azureedge.net/packages/converttosarif.${version}.nupkg
  - name: dart
    downloads:
      - os:
          linux: linux
          macos: macos
          windows: windows
        cpu:
          arm_64: arm64
          x86_64: x64
        url: https://storage.googleapis.com/dart-archive/channels/stable/release/${version}/sdk/dartsdk-${os}-${cpu}-release.zip
        strip_components: 1
  - name: dbt-cli
    version: 0.38.14
    downloads:
      - os:
          linux: linux
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/dbt-labs/dbt-cli/releases/download/v${version}/dbt_${version}_${os}_${cpu}.tar.gz
      - os:
          macos: darwin
        url: https://github.com/dbt-labs/dbt-cli/releases/download/v${version}/dbt_${version}_darwin_all.tar.gz
      - os:
          windows: windows
        url: https://github.com/dbt-labs/dbt-cli/releases/download/v${version}/dbt_${version}_windows_amd64.tar.gz
  - name: deno
    downloads:
      - os:
          macos: apple-darwin
        cpu:
          x86_64: x86_64
          arm_64: aarch64
        url: https://github.com/denoland/deno/releases/download/v${version}/deno-${cpu}-${os}.zip
      - os:
          linux: unknown-linux-gnu
          windows: pc-windows-msvc
        cpu:
          x86_64: x86_64
        url: https://github.com/denoland/deno/releases/download/v${version}/deno-${cpu}-${os}.zip
  - name: difft
    downloads:
      - os:
          macos: apple-darwin
          linux: unknown-linux-gnu
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://github.com/Wilfred/difftastic/releases/download/${version}/difft-${cpu}-${os}.tar.gz
      - os:
          windows: pc-windows-msvc
        cpu:
          x86_64: x86_64
        url: https://github.com/Wilfred/difftastic/releases/download/${version}/difft-${cpu}-${os}.zip
  - name: direnv
    executable: true
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/direnv/direnv/releases/download/v${version}/direnv.${os}-${cpu}
  - name: docker-credential-ecr-login
    executable: true
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://amazon-ecr-credential-helper-releases.s3.us-east-2.amazonaws.com/${version}/${os}-${cpu}/docker-credential-ecr-login
      - os:
          windows: windows
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://amazon-ecr-credential-helper-releases.s3.us-east-2.amazonaws.com/${version}/windows-${cpu}/docker-credential-ecr-login.exe
  - name: dotenv-linter
    version: 3.3.0
    downloads:
      - os:
          macos: ""
        url: https://github.com/dotenv-linter/dotenv-linter/releases/download/v${version}/dotenv-linter-darwin-x86_64.tar.gz
        version: <3.1.1
      - os:
          linux: alpine
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://github.com/dotenv-linter/dotenv-linter/releases/download/v${version}/dotenv-linter-${os}-${cpu}.tar.gz
      - os:
          macos: darwin
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://github.com/dotenv-linter/dotenv-linter/releases/download/v${version}/dotenv-linter-${os}-${cpu}.tar.gz
      - os:
          windows: ""
        cpu:
          x86_64: ""
        url: https://github.com/dotenv-linter/dotenv-linter/releases/download/v${version}/dotenv-linter-win-x64.zip
  - name: dotnet
    version: 7.0.400
    downloads:
      - os:
          linux: ""
        cpu:
          x86_64: ""
        url: https://download.visualstudio.microsoft.com/download/pr/dbfe6cc7-dd82-4cec-b267-31ed988b1652/c60ab4793c3714be878abcb9aa834b63/dotnet-sdk-7.0.400-linux-x64.tar.gz
        version: 7.0.400
      - os:
          linux: ""
        cpu:
          arm_64: ""
        url: https://download.visualstudio.microsoft.com/download/pr/16b0b1af-6eab-4f9e-b9a4-9b29f6a1d681/4624e54b61cae05b1025211482f9c5e9/dotnet-sdk-7.0.400-linux-arm64.tar.gz
        version: 7.0.400
      - os:
          windows: ""
        cpu:
          x86_64: ""
        url: https://download.visualstudio.microsoft.com/download/pr/0f17575a-a6b0-4365-9b79-64db70022d23/56e0da10678e4b2cad0cba0a83a561af/dotnet-sdk-7.0.400-win-x86.zip
        version: 7.0.400
  - name: eksctl
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/eksctl-io/eksctl/releases/download/v${version}/eksctl_${os}_${cpu}.tar.gz
      - os:
          windows: Windows
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/eksctl-io/eksctl/releases/download/v${version}/eksctl_${os}_${cpu}.zip
  - name: gh
    downloads:
      - os:
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/cli/cli/releases/download/v${version}/gh_${version}_${os}_${cpu}.tar.gz
        strip_components: 1
      - os:
          windows: windows
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/cli/cli/releases/download/v${version}/gh_${version}_${os}_${cpu}.zip
        strip_components: 1
      - os:
          macos: macOS
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/cli/cli/releases/download/v${version}/gh_${version}_${os}_${cpu}.zip
        version: ">=2.28.0"
        strip_components: 1
      - os:
          macos: macOS
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/cli/cli/releases/download/v${version}/gh_${version}_${os}_${cpu}.tar.gz
        strip_components: 1
  - name: gk
    downloads:
      - os:
          macos: macOS
          linux: Linux
          windows: Windows
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://github.com/gitkraken/gk-cli/releases/download/v${version}/gk_${version}_${os}_${cpu}.zip
  - name: go
    downloads:
      - os:
          macos: ""
        url: https://golang.org/dl/go${version}.darwin-amd64.tar.gz
        version: <1.16.0
        strip_components: 1
      - os:
          linux: linux
          macos: darwin
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://golang.org/dl/go${version}.${os}-${cpu}.tar.gz
        strip_components: 1
      - os:
          windows: ""
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://golang.org/dl/go${version}.windows-${cpu}.zip
        strip_components: 1
  - name: grpcui
    downloads:
      - os:
          linux: linux
          macos: osx
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://github.com/fullstorydev/grpcui/releases/download/v${version}/grpcui_${version}_${os}_${cpu}.tar.gz
      - os:
          windows: windows
        cpu:
          x86_64: amd64
        url: https://github.com/fullstorydev/grpcui/releases/download/v${version}/grpcui_${version}_windows_x86_64.zip
  - name: hadolint
    version: 2.10.0
    executable: true
    downloads:
      - os:
          linux: ""
        cpu:
          x86_64: ""
        url: https://github.com/hadolint/hadolint/releases/download/v${version}/hadolint-Linux-x86_64
      - os:
          linux: ""
        cpu:
          arm_64: ""
        url: https://github.com/hadolint/hadolint/releases/download/v${version}/hadolint-Linux-arm64
      - os:
          macos: ""
        cpu:
          x86_64: ""
        url: https://github.com/hadolint/hadolint/releases/download/v${version}/hadolint-Darwin-x86_64
      - os:
          macos: ""
        cpu:
          arm_64: ""
        url: https://github.com/hadolint/hadolint/releases/download/v${version}/hadolint-Darwin-x86_64
      - os:
          windows: ""
        cpu:
          x86_64: ""
        url: https://github.com/hadolint/hadolint/releases/download/v${version}/hadolint-Windows-x86_64.exe
  - name: helm
    downloads:
      - os:
          windows: windows
          macos: darwin
          linux: linux
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://get.helm.sh/helm-v${version}-${os}-${cpu}.tar.gz
        strip_components: 1
  - name: ibazel
    executable: true
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/bazelbuild/bazel-watcher/releases/download/v${version}/ibazel_${os}_${cpu}
      - os:
          windows: windows
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/bazelbuild/bazel-watcher/releases/download/v${version}/ibazel_${os}_${cpu}.exe
  - name: include-what-you-use
    version: 0.20
    downloads:
      - os:
          linux: linux
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://trunk.io/releases/include-what-you-use-${version}-${os}-${cpu}.tar.gz
      - os:
          macos: macos
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://trunk.io/releases/include-what-you-use-${version}-${os}-${cpu}.tar.gz
  - name: istioctl
    downloads:
      - os:
          macos: ""
        cpu:
          arm_64: ""
        url: https://github.com/istio/istio/releases/download/${version}/istioctl-${version}-osx-arm64.tar.gz
      - os:
          linux: ""
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/istio/istio/releases/download/${version}/istioctl-${version}-linux-${cpu}.tar.gz
  - name: jdk-11
    downloads:
      - os:
          linux: linux
        cpu:
          x86_64: x64
        url: https://cdn.azul.com/zulu/bin/zulu11.52.13-ca-jdk11.0.13-${os}_${cpu}.tar.gz
        strip_components: 1
      - os:
          macos: macosx
        cpu:
          x86_64: x64
          arm_64: aarch64
        url: https://cdn.azul.com/zulu/bin/zulu11.52.13-ca-jdk11.0.13-${os}_${cpu}.tar.gz
        strip_components: 1
      - os:
          windows: ""
        cpu:
          x86_64: ""
        url: https://cdn.azul.com/zulu/bin/zulu11.52.13-ca-jdk11.0.13-win_x64.zip
        strip_components: 1
  - name: jdk-13
    downloads:
      - os:
          linux: linux
          macos: macosx
        cpu:
          x86_64: x64
          arm_64: aarch64
        url: https://cdn.azul.com/zulu/bin/zulu13.48.19-ca-jdk13.0.11-${os}_${cpu}.tar.gz
        strip_components: 1
      - os:
          windows: ""
        cpu:
          x86_64: ""
        url: https://cdn.azul.com/zulu/bin/zulu13.48.19-ca-jdk13.0.11-win_x64.zip
        strip_components: 1
  - name: jdk-17
    downloads:
      - os:
          macos: macosx
          linux: linux
        cpu:
          arm_64: aarch64
          x86_64: x64
        url: https://cdn.azul.com/zulu/bin/zulu17.30.15-ca-jdk17.0.1-${os}_${cpu}.tar.gz
        strip_components: 1
  - name: jq
    executable: true
    args:
      semver: ${version}=>(?:jq-|)?(?P<semver>.*)
    downloads:
      - os:
          linux: linux
        cpu:
          x86_64: amd64
        url: https://github.com/jqlang/jq/releases/download/jq-${semver}/jq-linux64
      - os:
          macos: darwin
        url: https://github.com/jqlang/jq/releases/download/jq-${semver}/jq-osx-amd64
      - os:
          windows: win
        url: https://github.com/jqlang/jq/releases/download/jq-${semver}/jq-win64.exe
  - name: kubectl
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://dl.k8s.io/release/v${version}/bin/${os}/${cpu}/kubectl
  - name: minikube
    executable: true
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/kubernetes/minikube/releases/download/v${version}/minikube-${os}-${cpu}
      - os:
          windows: windows
        cpu:
          x86_64: amd64
        url: https://github.com/kubernetes/minikube/releases/download/v${version}/minikube-${os}-${cpu}.exe
  - name: node
    downloads:
      - os:
          macos: ""
        url: https://nodejs.org/dist/v${version}/node-v${version}-darwin-x64.tar.gz
        version: <16.0.0
        strip_components: 1
      - os:
          macos: darwin
          linux: linux
        cpu:
          x86_64: x64
          arm_64: arm64
        url: https://nodejs.org/dist/v${version}/node-v${version}-${os}-${cpu}.tar.gz
        strip_components: 1
      - os:
          windows: ""
        cpu:
          x86_64: ""
        url: https://nodejs.org/dist/v${version}/node-v${version}-win-x64.zip
        strip_components: 1
  - name: opa
    executable: true
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/open-policy-agent/opa/releases/download/v${version}/opa_${os}_${cpu}_static
      - os:
          windows: windows
        cpu:
          x86_64: amd64
        url: https://github.com/open-policy-agent/opa/releases/download/v${version}/opa_windows_amd64.exe
  - name: osv-scanner
    version: 1.3.6
    executable: true
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/google/osv-scanner/releases/download/v${version}/osv-scanner_${os}_${cpu}
        version: ">=1.7.0"
      - os:
          macos: darwin
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/google/osv-scanner/releases/download/v${version}/osv-scanner_${version}_${os}_${cpu}
      - os:
          windows: ""
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/google/osv-scanner/releases/download/v${version}/osv-scanner_windows_${cpu}.exe
        version: ">=1.7.0"
      - os:
          windows: ""
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/google/osv-scanner/releases/download/v${version}/osv-scanner_${version}_windows_${cpu}.exe
  - name: phive
    version: 0.15.1
    executable: true
    downloads:
      - url: https://github.com/phar-io/phive/releases/download/${version}/phive-${version}.phar
  - name: pnpm
    executable: true
    downloads:
      - os:
          macos: macos
          linux: linuxstatic
        cpu:
          x86_64: x64
          arm_64: arm64
        url: https://github.com/pnpm/pnpm/releases/download/v${version}/pnpm-${os}-${cpu}
      - os:
          windows: win
        cpu:
          arm_64: arm64
          x86_64: x64
        url: https://github.com/pnpm/pnpm/releases/download/v${version}/pnpm-${os}-${cpu}.exe
  - name: psscriptanalyzer
    downloads:
      - os:
          macos: macos
          linux: linux
          windows: windows
        url: https://github.com/PowerShell/PSScriptAnalyzer/releases/download/${version}/PSScriptAnalyzer.${version}.nupkg
        version: <=1.22.0
      - os:
          macos: macos
          linux: linux
          windows: windows
        url: https://github.com/PowerShell/PSScriptAnalyzer/releases/download/v${version}/PSScriptAnalyzer.${version}.nupkg
  - name: pwsh
    downloads:
      - os:
          macos: osx
          linux: linux
        cpu:
          x86_64: x64
          arm_64: arm64
        url: https://github.com/PowerShell/PowerShell/releases/download/v${version}/powershell-${version}-${os}-${cpu}.tar.gz
      - os:
          windows: win
        cpu:
          arm_64: arm64
          x86_64: x64
        url: https://github.com/PowerShell/PowerShell/releases/download/v${version}/powershell-${version}-${os}-${cpu}.zip
  - name: python
    downloads:
      - os:
          macos: apple-darwin
          linux: unknown-linux-gnu
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20220318/cpython-${version}+20220318-${cpu}-${os}-install_only.tar.gz
        version: <=3.10.3
        strip_components: 1
      - os:
          windows: pc-windows-msvc-shared
        cpu:
          x86_64: x86_64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20220318/cpython-${version}+20220318-${cpu}-${os}-install_only.tar.gz
        version: <=3.10.3
        strip_components: 1
      - os:
          macos: apple-darwin
          linux: unknown-linux-gnu
        cpu:
          x86_64: x86_64
          arm_64: aarch64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20221106/cpython-${version}+20221106-${cpu}-${os}-install_only.tar.gz
        version: <=3.10.8
        strip_components: 1
      - os:
          windows: pc-windows-msvc-shared
        cpu:
          x86_64: x86_64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20221106/cpython-${version}+20221106-${cpu}-${os}-install_only.tar.gz
        version: <=3.10.8
        strip_components: 1
      - os:
          linux: unknown-linux-gnu
          macos: apple-darwin
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20230116/cpython-${version}+20230116-${cpu}-${os}-install_only.tar.gz
        version: <=3.11.1
        strip_components: 1
      - os:
          windows: pc-windows-msvc-shared
        cpu:
          x86_64: x86_64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20230116/cpython-${version}+20230116-${cpu}-${os}-install_only.tar.gz
        version: <=3.11.1
        strip_components: 1
      - os:
          linux: unknown-linux-gnu
          macos: apple-darwin
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-${version}+20231002-${cpu}-${os}-install_only.tar.gz
        version: <=3.11.6
        strip_components: 1
      - os:
          windows: pc-windows-msvc-shared
        cpu:
          x86_64: x86_64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-${version}+20231002-${cpu}-${os}-install_only.tar.gz
        version: <=3.11.6
        strip_components: 1
      - os:
          linux: unknown-linux-gnu
          macos: apple-darwin
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20240415/cpython-${version}+20240415-${cpu}-${os}-install_only.tar.gz
        version: <=3.11.9
        strip_components: 1
      - os:
          windows: pc-windows-msvc-shared
        cpu:
          x86_64: x86_64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20240415/cpython-${version}+20240415-${cpu}-${os}-install_only.tar.gz
        version: <=3.11.9
        strip_components: 1
      - os:
          macos: apple-darwin
          linux: unknown-linux-gnu
        cpu:
          x86_64: x86_64
          arm_64: aarch64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20240224/cpython-${version}+20240224-${cpu}-${os}-install_only.tar.gz
        version: <=3.12.2
        strip_components: 1
      - os:
          windows: pc-windows-msvc-shared
        cpu:
          x86_64: x86_64
        url: https://github.com/indygreg/python-build-standalone/releases/download/20240224/cpython-${version}+20240224-${cpu}-${os}-install_only.tar.gz
        version: <=3.12.2
        strip_components: 1
  - name: regal
    downloads:
      - os:
          linux: Linux
          macos: Darwin
        cpu:
          arm_64: arm64
          x86_64: x86_64
        url: https://github.com/StyraInc/regal/releases/download/v${version}/regal_${os}_${cpu}
      - os:
          windows: Windows
        cpu:
          x86_64: x86_64
        url: https://github.com/StyraInc/regal/releases/download/v${version}/regal_Windows_x86_64.exe
  - name: ruby-build
    version: 20240319
    downloads:
      - os:
          linux: linux
          macos: macos
        url: https://github.com/rbenv/ruby-build/archive/refs/tags/v20240319.tar.gz
        strip_components: 1
  - name: ruby-install
    version: 3.1.4
    downloads:
      - os:
          windows: ""
        url: https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-${version}-1/rubyinstaller-${version}-1-x86.7z
        strip_components: 1
  - name: rust
    downloads:
      - os:
          macos: ""
        url: https://static.rust-lang.org/dist/rust-${version}-x86_64-apple-darwin.tar.gz
        version: <1.49.0
        strip_components: 2
      - os:
          windows: pc-windows-msvc
          linux: unknown-linux-gnu
          macos: apple-darwin
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://static.rust-lang.org/dist/rust-${version}-${cpu}-${os}.tar.gz
        strip_components: 2
  - name: scalafmt
    version: 3.4.3
    executable: true
    downloads:
      - os:
          linux: ""
        cpu:
          x86_64: ""
        url: https://github.com/scalameta/scalafmt/releases/download/v${version}/scalafmt-linux-musl
      - os:
          macos: ""
        cpu:
          x86_64: ""
        url: https://github.com/scalameta/scalafmt/releases/download/v${version}/scalafmt-macos
      - os:
          macos: ""
        cpu:
          arm_64: ""
        url: https://github.com/scalameta/scalafmt/releases/download/v${version}/scalafmt-macos
  - name: sentry-cli
    executable: true
    downloads:
      - os:
          linux: Linux
        cpu:
          x86_64: x86_64
          arm_64: aarch64
        url: https://github.com/getsentry/sentry-cli/releases/download/${version}/sentry-cli-${os}-${cpu}
      - os:
          macos: Darwin
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://github.com/getsentry/sentry-cli/releases/download/${version}/sentry-cli-${os}-${cpu}
      - os:
          windows: Windows
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://github.com/getsentry/sentry-cli/releases/download/${version}/sentry-cli-${os}-${cpu}.exe
  - name: shellcheck
    version: 0.8.0
    downloads:
      - os:
          linux: linux
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://github.com/koalaman/shellcheck/releases/download/v${version}/shellcheck-v${version}.${os}.${cpu}.tar.xz
        strip_components: 1
      - os:
          macos: ""
        cpu:
          x86_64: ""
        url: https://github.com/koalaman/shellcheck/releases/download/v${version}/shellcheck-v${version}.darwin.x86_64.tar.xz
        strip_components: 1
      - os:
          macos: ""
        cpu:
          arm_64: ""
        url: https://github.com/koalaman/shellcheck/releases/download/v${version}/shellcheck-v${version}.darwin.x86_64.tar.xz
        strip_components: 1
  - name: stringslint
    version: 0.1.1
    downloads:
      - os:
          macos: ""
        url: https://github.com/dral3x/StringsLint/releases/download/${version}/portable_stringslint.zip
  - name: stylua
    version: 0.17.0
    downloads:
      - os:
          windows: windows
          macos: macos
          linux: linux
        cpu:
          x86_64: x86_64
          arm_64: aarch64
        url: https://github.com/JohnnyMorganz/StyLua/releases/download/v${version}/stylua-${os}-${cpu}.zip
  - name: swiftformat
    downloads:
      - os:
          macos: ""
        url: https://github.com/nicklockwood/SwiftFormat/releases/download/${version}/swiftformat.zip
  - name: swiftlint
    version: 0.49.1
    downloads:
      - os:
          macos: ""
        url: https://github.com/realm/SwiftLint/releases/download/${version}/portable_swiftlint.zip
  - name: taplo
    args:
      semver: ${version}=>(?:release-cli-|release-taplo-cli-)?(?P<semver>.*)
    downloads:
      - os:
          linux: linux
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://github.com/tamasfe/taplo/releases/download/${semver}/taplo-linux-${cpu}.gz
        version: ">=0.8.0"
      - os:
          macos: ""
        cpu:
          x86_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/${semver}/taplo-darwin-x86_64.gz
        version: ">=0.8.0"
      - os:
          macos: ""
        cpu:
          arm_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/${semver}/taplo-darwin-aarch64.gz
        version: ">=0.8.0"
      - os:
          windows: ""
        cpu:
          x86_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/${semver}/taplo-windows-x86_64.zip
        version: ">=0.8.0"
      - os:
          linux: ""
        cpu:
          x86_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/release-taplo-cli-${semver}/taplo-x86_64-unknown-linux-gnu.tar.gz
        version: ">=0.6.7"
      - os:
          macos: ""
        cpu:
          x86_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/release-taplo-cli-${semver}/taplo-x86_64-apple-darwin-gnu.tar.gz
        version: ">=0.6.7"
      - os:
          macos: ""
        cpu:
          arm_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/release-taplo-cli-${semver}/taplo-x86_64-apple-darwin-gnu.tar.gz
        version: ">=0.6.7"
      - os:
          linux: ""
        cpu:
          x86_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/release-cli-${semver}/taplo-${semver}-x86_64-unknown-linux-gnu.tar.gz
        version: ">=0.6.0"
      - os:
          macos: ""
        cpu:
          x86_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/release-cli-${semver}/taplo-${semver}-x86_64-apple-darwin-gnu.tar.gz
        version: ">=0.6.0"
      - os:
          macos: ""
        cpu:
          arm_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/release-cli-${semver}/taplo-${semver}-x86_64-apple-darwin-gnu.tar.gz
        version: ">=0.6.0"
      - os:
          linux: ""
        cpu:
          x86_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/${version}/taplo-x86_64-unknown-linux-gnu.tar.gz
      - os:
          macos: ""
        cpu:
          x86_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/${version}/taplo-x86_64-apple-darwin-gnu.tar.gz
      - os:
          macos: ""
        cpu:
          arm_64: ""
        url: https://github.com/tamasfe/taplo/releases/download/${version}/taplo-x86_64-apple-darwin-gnu.tar.gz
  - name: target-determinator
    executable: true
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/bazel-contrib/target-determinator/releases/download/v${version}/target-determinator.${os}.${cpu}
      - os:
          windows: windows
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/bazel-contrib/target-determinator/releases/download/v${version}/target-determinator.${os}.${cpu}.exe
  - name: terraform
    version: 1.1.4
    downloads:
      - os:
          macos: ""
        url: https://releases.hashicorp.com/terraform/${version}/terraform_${version}_darwin_amd64.zip
        version: <1.0.2
      - os:
          macos: darwin
          linux: linux
          windows: windows
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://releases.hashicorp.com/terraform/${version}/terraform_${version}_${os}_${cpu}.zip
  - name: terraform-docs
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/terraform-docs/terraform-docs/releases/download/v${version}/terraform-docs-v${version}-${os}-${cpu}.tar.gz
      - os:
          windows: windows
        cpu:
          x86_64: amd64
        url: https://github.com/terraform-docs/terraform-docs/releases/download/v${version}/terraform-docs-v${version}-${os}-${cpu}.zip
  - name: terraform-switcher
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/warrensbox/terraform-switcher/releases/download/${version}/terraform-switcher_${version}_${os}_${cpu}.tar.gz
      - os:
          windows: windows
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/warrensbox/terraform-switcher/releases/download/${version}/terraform-switcher_${version}_${os}_${cpu}.zip
  - name: terraformer
    executable: true
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/GoogleCloudPlatform/terraformer/releases/download/${version}/terraformer-all-${os}-${cpu}
      - os:
          windows: windows
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/GoogleCloudPlatform/terraformer/releases/download/${version}/terraformer-alicloud-${os}-${cpu}.exe
  - name: terragrunt
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/gruntwork-io/terragrunt/releases/download/v${version}/terragrunt_${os}_${cpu}
      - os:
          windows: ""
        cpu:
          x86_64: ""
        url: https://github.com/gruntwork-io/terragrunt/releases/download/v${version}/terragrunt_windows_amd64.exe
  - name: terramate
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://github.com/terramate-io/terramate/releases/download/v${version}/terramate_${version}_${os}_${cpu}.tar.gz
      - os:
          windows: windows
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://github.com/terramate-io/terramate/releases/download/v${version}/terramate_${version}_${os}_${cpu}.zip
  - name: terrascan
    version: 1.18.1
    downloads:
      - os:
          linux: Linux
          windows: Windows
          macos: Darwin
        cpu:
          x86_64: x86_64
          arm_64: arm64
        url: https://github.com/tenable/terrascan/releases/download/v${version}/terrascan_${version}_${os}_${cpu}.tar.gz
  - name: tflint
    version: 0.47.0
    downloads:
      - os:
          macos: ""
        url: https://github.com/terraform-linters/tflint/releases/download/v${version}/tflint_darwin_amd64.zip
        version: <0.29.1
      - os:
          windows: windows
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/terraform-linters/tflint/releases/download/v${version}/tflint_${os}_${cpu}.zip
  - name: tfmigrate
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/minamijoyo/tfmigrate/releases/download/v${version}/tfmigrate_${version}_${os}_${cpu}.tar.gz
  - name: tfnotify
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/mercari/tfnotify/releases/download/v${version}/tfnotify_${os}_${cpu}.tar.gz
  - name: tfsec
    version: 1.28.1
    executable: true
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/aquasecurity/tfsec/releases/download/v${version}/tfsec-${os}-${cpu}
      - os:
          windows: ""
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/aquasecurity/tfsec/releases/download/v${version}/tfsec-windows-${cpu}.exe
  - name: tfupdate
    downloads:
      - os:
          windows: windows
          macos: darwin
          linux: linux
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/minamijoyo/tfupdate/releases/download/v${version}/tfupdate_${version}_${os}_${cpu}.tar.gz
  - name: tofu
    version: 1.6.2
    downloads:
      - os:
          linux: linux
          windows: windows
          macos: darwin
        cpu:
          arm_64: arm64
          x86_64: amd64
        url: https://github.com/opentofu/opentofu/releases/download/v${version}/tofu_${version}_${os}_${cpu}.zip
  - name: tree-sitter
    downloads:
      - os:
          macos: macos
          windows: windows
          linux: linux
        cpu:
          arm_64: arm64
          x86_64: x64
        url: https://github.com/tree-sitter/tree-sitter/releases/download/v${version}/tree-sitter-${os}-${cpu}.gz
      - os:
          windows: windows
        cpu:
          x86_64: x64
        url: https://github.com/tree-sitter/tree-sitter/releases/download/v${version}/tree-sitter-${os}-${cpu}.gz
  - name: trivy
    downloads:
      - os:
          linux: ""
        cpu:
          x86_64: 64bit
          arm_64: ARM64
        url: https://github.com/aquasecurity/trivy/releases/download/v${version}/trivy_${version}_Linux-${cpu}.tar.gz
      - os:
          macos: ""
        cpu:
          x86_64: 64bit
          arm_64: ARM64
        url: https://github.com/aquasecurity/trivy/releases/download/v${version}/trivy_${version}_macOS-${cpu}.tar.gz
      - os:
          windows: ""
        cpu:
          x86_64: 64bit
          arm_64: ARM64
        url: https://github.com/aquasecurity/trivy/releases/download/v${version}/trivy_${version}_windows-${cpu}.zip
  - name: trufflehog
    downloads:
      - os:
          windows: windows
          macos: darwin
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/trufflesecurity/trufflehog/releases/download/v${version}/trufflehog_${version}_${os}_${cpu}.tar.gz
  - name: trunk-toolbox
    version: 0.5.3
    downloads:
      - os:
          macos: apple-darwin
          linux: unknown-linux-gnu
        cpu:
          arm_64: aarch64
          x86_64: x86_64
        url: https://github.com/trunk-io/toolbox/releases/download/${version}/trunk-toolbox-${version}-${cpu}-${os}.tar.gz
        version: ">=0.2.0"
  - name: vale
    downloads:
      - os:
          linux: Linux
          macos: macOS
        cpu:
          x86_64: 64-bit
          arm_64: arm64
        url: https://github.com/errata-ai/vale/releases/download/v${version}/vale_${version}_${os}_${cpu}.tar.gz
      - os:
          windows: Windows
        cpu:
          x86_64: 64-bit
          arm_64: arm64
        url: https://github.com/errata-ai/vale/releases/download/v${version}/vale_${version}_Windows_${cpu}.zip
  - name: yarn
    downloads:
      - os:
          macos: darwin
          linux: linux
        cpu:
          x86_64: amd64
          arm_64: arm64
        url: https://github.com/yarnpkg/yarn/releases/download/v${version}/yarn-${version}.js
  - name: yq
    downloads:
      - os:
          linux: linux
          macos: darwin
        cpu:
          x86_64: 386
          arm_64: arm64
        url: https://github.com/mikefarah/yq/releases/download/v${version}/yq_${os}_${cpu}
      - os:
          windows: windows
        cpu:
          arm_64: arm64
          x86_64: 386
        url: https://github.com/mikefarah/yq/releases/download/v${version}/yq_${os}_${cpu}.exe
environments:
  - name: SYSTEM
    environment:
      - name: PATH
        list:
          - ${env.PATH:-}
runtimes:
  definitions:
    - type: go
      download: go
      known_good_version: 1.21.0
      linter_environment:
        - name: PATH
          list:
            - ${linter}/bin
        - name: GOPATH
          value: ${linter}
      runtime_environment:
        - name: HOME
          value: ${home}
        - name: PATH
          list:
            - ${runtime}/bin
        - name: GOPRIVATE
          optional: true
          value: ${env.GOPRIVATE}
        - name: GOROOT
          value: ${runtime}
        - name: GO111MODULE
          value: on
        - name: CGO_ENABLED
          value: 0
        - name: http_proxy
          optional: true
          value: ${env.http_proxy}
        - name: https_proxy
          optional: true
          value: ${env.https_proxy}
      shims:
        - name: go
          target: go
        - name: gofmt
          target: gofmt
      version_commands:
        - parse_regex: go version go(.*) (.*)
          run: go version
    - type: python
      download: python
      known_good_version: 3.10.8
      linter_environment:
        - name: PATH
          list:
            - ${linter}/bin
            - ${linter}/Scripts
        - name: VIRTUAL_ENV
          value: ${linter}
      runtime_environment:
        - name: HOME
          value: ${env.HOME:-}
        - name: SYSTEMROOT
          optional: true
          value: ${env.SYSTEMROOT}
        - name: PATH
          list:
            - ${runtime}/bin
            - ${runtime}
        - name: http_proxy
          optional: true
          value: ${env.http_proxy}
        - name: https_proxy
          optional: true
          value: ${env.https_proxy}
        - name: PYTHONUTF8
          value: 1
      shims:
        - name: python3
          target: python3
        - name: pip3
          target: pip3
        - name: pydoc3
          target: pydoc3
        - name: python3-config
          target: python3-config
        - name: pip
          target: pip
        - name: python
          target: python3
      version_commands:
        - parse_regex: Python ${semver}
          run: python3 --version
    - type: rust
      download: rust
      known_good_version: 1.71.1
      linter_environment:
        - name: PATH
          list:
            - ${linter}/bin
      runtime_environment:
        - name: HOME
          value: ${env.HOME:-}
        - name: PATH
          list:
            - ${runtime}/bin
        - name: http_proxy
          optional: true
          value: ${env.http_proxy}
        - name: https_proxy
          optional: true
          value: ${env.https_proxy}
      shims:
        - name: cargo
          target: cargo
        - name: cargo-clippy
          target: cargo-clippy
        - name: cargo-fmt
          target: cargo-fmt
        - name: clippy-driver
          target: clippy-driver
        - name: rls
          target: rls
        - name: rust-analyzer
          target: rust-analyzer
        - name: rustc
          target: rustc
        - name: rust-demangler
          target: rust-demangler
        - name: rustdoc
          target: rustdoc
        - name: rustfmt
          target: rustfmt
        - name: rust-gdb
          target: rust-gdb
        - name: rust-gdbgui
          target: rust-gdbgui
        - name: rust-lldb
          target: rust-lldb
      version_commands:
        - parse_regex: ${semver}
          run: rustc --version
    - type: java
      download: jdk-13
      known_good_version: 13.0.11
      linter_environment:
        - name: PATH
          list:
            - ${linter}/bin
      runtime_environment:
        - name: HOME
          value: ${env.HOME:-}
        - name: PATH
          list:
            - ${runtime}/bin
        - name: JAVA_HOME
          value: ${runtime}
        - name: http_proxy
          optional: true
          value: ${env.http_proxy}
        - name: https_proxy
          optional: true
          value: ${env.https_proxy}
      shims:
        - name: jaotc
          target: jaotc
        - name: jarsigner
          target: jarsigner
        - name: javac
          target: javac
        - name: javap
          target: javap
        - name: jconsole
          target: jconsole
        - name: jdeprscan
          target: jdeprscan
        - name: jfr
          target: jfr
        - name: jimage
          target: jimage
        - name: jjs
          target: jjs
        - name: jmap
          target: jmap
        - name: jps
          target: jps
        - name: jshell
          target: jshell
        - name: jstat
          target: jstat
        - name: keytool
          target: keytool
        - name: rmic
          target: rmic
        - name: rmiregistry
          target: rmiregistry
        - name: unpack200
          target: unpack200
        - name: jar
          target: jar
        - name: java
          target: java
        - name: javadoc
          target: javadoc
        - name: jcmd
          target: jcmd
        - name: jdb
          target: jdb
        - name: jdeps
          target: jdeps
        - name: jhsdb
          target: jhsdb
        - name: jinfo
          target: jinfo
        - name: jlink
          target: jlink
        - name: jmod
          target: jmod
        - name: jrunscript
          target: jrunscript
        - name: jstack
          target: jstack
        - name: jstatd
          target: jstatd
        - name: pack200
          target: pack200
        - name: rmid
          target: rmid
        - name: serialver
          target: serialver
      version_commands:
        - parse_regex: ${semver}
          run: java --version
        - parse_regex: java version "(.*)"
          run: java -version
    - type: php
      linter_environment:
        - name: PATH
          list:
            - ${linter}/bin
      runtime_environment:
        - name: HOME
          value: ${env.HOME}
        - name: PATH
          list:
            - ${env.PATH}
      system_version: required
      version: ">=8.0.0"
      version_commands:
        - parse_regex: PHP ${short_semver}
          run: php --version
    - type: node
      download: node
      known_good_version: 18.12.1
      linter_environment:
        - name: PATH
          list:
            - ${linter}/node_modules/.bin
        - name: NODE_PATH
          value: ${linter}/node_modules
        - name: NODE_OPTIONS
          optional: true
          value: ${env.NODE_OPTIONS}
      runtime_environment:
        - name: HOME
          value: ${env.HOME:-}
        - name: PATH
          list:
            - ${runtime}/bin
            - ${runtime}
            - ${env.PATH}
        - name: http_proxy
          optional: true
          value: ${env.http_proxy}
        - name: https_proxy
          optional: true
          value: ${env.https_proxy}
        - name: NODE_EXTRA_CA_CERTS
          optional: true
          value: ${env.NODE_EXTRA_CA_CERTS}
        - name: NODE_OPTIONS
          optional: true
          value: ${env.NODE_OPTIONS}
        - name: NPM_CONFIG_USERCONFIG
          optional: true
          value: ${env.NPM_CONFIG_USERCONFIG}
        - name: COMSPEC
          optional: true
          value: ${env.COMSPEC}
      shims:
        - name: node
          target: node
        - name: npm
          target: npm
        - name: npx
          target: npx
        - name: corepack
          target: corepack
      version_commands:
        - parse_regex: ${semver}
          run: node --version
    - type: ruby
      download: ruby-build
      known_good_version: 3.1.4
      linter_environment:
        - name: PATH
          list:
            - ${linter}/bin
        - name: GEM_HOME
          value: ${linter}
        - name: GEM_PATH
          value: ${linter}
        - name: SYSTEMDRIVE
          optional: true
          value: ${env.SYSTEMDRIVE}
      runtime_environment:
        - name: HOME
          value: ${env.HOME:-}
        - name: PATH
          list:
            - ${runtime}/bin
        - name: LD_LIBRARY_PATH
          list:
            - ${runtime}/lib
        - name: http_proxy
          optional: true
          value: ${env.http_proxy}
        - name: https_proxy
          optional: true
          value: ${env.https_proxy}
      shims:
        - name: bundle
          target: bundle
        - name: bundler
          target: bundler
        - name: erb
          target: erb
        - name: gem
          target: gem
        - name: irb
          target: irb
        - name: racc
          target: racc
        - name: rake
          target: rake
        - name: rbs
          target: rbs
        - name: rdbg
          target: rdbg
        - name: rdoc
          target: rdoc
        - name: ri
          target: ri
        - name: ruby
          target: ruby
        - name: typeprof
          target: typeprof
      version_commands:
        - parse_regex: ruby ${semver}(p+.*)?
          run: ruby --version
actions:
  definitions:
    - autogenerated_definition_path: actions/commitizen
      description: Assistant for writing commit messages that obey a standard
      display_name: Commitizen
      id: commitizen
      interactive: true
      packages_file: package.json
      run: cz --hook
      runtime: node
      triggers:
        - git_hooks:
            - prepare-commit-msg
    - autogenerated_definition_path: actions/commitlint
      description: Enforce git commit message standards
      display_name: Commitlint
      id: commitlint
      packages_file: package.json
      run: commitlint --edit ${1}
      runtime: node
      triggers:
        - git_hooks:
            - commit-msg
    - autogenerated_definition_path: actions/go-mod-tidy
      description: Runs go mod tidy when changes are detected to go.mod
      display_name: Go Mod Tidy
      id: go-mod-tidy
      run: go mod tidy
      runtime: go
      triggers:
        - files:
            - go.mod
    - autogenerated_definition_path: actions/git-blame-ignore-revs
      description: Automatically configure git to use .git-blame-ignore-revs while the file exists
      display_name: Auto-enable .git-blame-ignore-revs
      id: git-blame-ignore-revs
      run: bash ${cwd}/update_config.sh
      triggers:
        - files:
            - .git-blame-ignore-revs
        - schedule:
            interval: 24h
    - autogenerated_definition_path: actions/buf
      description: Run 'buf generate' anytime a .proto file changes. Must have a buf.work.yaml to work properly
      display_name: Buf generate
      id: buf-gen
      run: buf generate
      triggers:
        - files:
            - "**/*.proto"
            - buf.gen.yaml
            - buf.work.yaml
    - autogenerated_definition_path: actions/hello-world/python
      description: Prints 'Hello World' to the terminal during pre-commit trigger
      display_name: Hello World
      id: hello-world-python
      packages_file: requirements.txt
      run: python3 ${cwd}/hello
      runtime: python
      triggers:
        - git_hooks:
            - pre-commit
    - autogenerated_definition_path: actions/poetry
      description: Run 'poetry check' to validate config
      display_name: poetry check
      environment:
        - name: VIRTUAL_ENV
          optional: true
          value: ${env.VIRTUAL_ENV}
      id: poetry-check
      run: poetry check
      triggers:
        - git_hooks:
            - pre-commit
    - autogenerated_definition_path: actions/poetry
      description: Run 'poetry lock' to update lock file to match pyproject.toml
      display_name: poetry lock
      environment:
        - name: VIRTUAL_ENV
          optional: true
          value: ${env.VIRTUAL_ENV}
      id: poetry-lock
      run: poetry lock --no-update
      triggers:
        - git_hooks:
            - pre-commit
    - autogenerated_definition_path: actions/poetry
      description: Run 'poetry export' to sync requirements.txt with lock file
      display_name: poetry export
      environment:
        - name: VIRTUAL_ENV
          optional: true
          value: ${env.VIRTUAL_ENV}
      id: poetry-export
      run: poetry export -f requirements.txt -o requirements.txt
      triggers:
        - git_hooks:
            - pre-commit
    - autogenerated_definition_path: actions/poetry
      description: Run 'poetry install' to ensure all locked packages are installed
      display_name: poetry install
      environment:
        - name: VIRTUAL_ENV
          optional: true
          value: ${env.VIRTUAL_ENV}
      id: poetry-install
      run: poetry install
      triggers:
        - git_hooks:
            - post-checkout
            - post-merge
    - autogenerated_definition_path: actions/submodules
      description: Git hook for updating submodules
      display_name: Submodule Init Update
      id: submodule-init-update
      notify_on_error: false
      run: git submodule update --init --recursive
      triggers:
        - git_hooks:
            - post-checkout
            - post-merge
            - pre-rebase
    - autogenerated_definition_path: actions/npm-check-pre-push
      description: Generate notifications if node_modules are out of date as a pre-push hook
      display_name: NPM Check
      environment:
        - name: NODE_PATH
          value: ${linter}/node_modules
      id: npm-check-pre-push
      packages_file: package.json
      run: node ${cwd}/npm_check.js
      runtime: node
      triggers:
        - git_hooks:
            - pre-push
    - autogenerated_definition_path: actions/yarn-check
      description: Generate notifications if node_modules are out of date
      display_name: Yarn Check
      environment:
        - name: NODE_PATH
          value: ${linter}/node_modules
      id: yarn-check
      output_type: notification_v1
      packages_file: package.json
      run: node ${cwd}/yarn-check/yarn_check.js
      runtime: node
      triggers:
        - schedule:
            interval: 24h
        - files:
            - package.json
            - yarn.lock
    - autogenerated_definition_path: actions/go-mod-tidy-vendor
      description: Runs go mod tidy followed by go mod vendor
      display_name: "Go Mod Tidy & Vendor"
      id: go-mod-tidy-vendor
      run: bash ${plugin}/actions/go-mod-tidy-vendor/go-mod-tidy-vendor.sh
      runtime: go
      triggers:
        - files:
            - go.mod
    - autogenerated_definition_path: actions/npm-check
      description: Generate notifications if node_modules are out of date
      display_name: NPM Check
      environment:
        - name: NODE_PATH
          value: ${linter}/node_modules
      id: npm-check
      output_type: notification_v1
      packages_file: package.json
      run: node ${cwd}/npm_check.js
      runtime: node
      triggers:
        - schedule:
            interval: 24h
        - files:
            - package.json
            - package-lock.json
    - autogenerated_definition_path: actions/git
      description: Git LFS hooks
      display_name: Git LFS
      environment:
        - name: SSH_AUTH_SOCK
          optional: true
          value: ${env.SSH_AUTH_SOCK}
        - name: SSH_AGENT_PID
          optional: true
          value: ${env.SSH_AGENT_PID}
      id: git-lfs
      notify_on_error: false
      run: git lfs "${hook}" ${@}
      triggers:
        - git_hooks:
            - post-checkout
            - post-commit
            - post-merge
            - pre-push
    - autogenerated_definition_path: actions/trunk
      description: Git hook for displaying commits tagged with '/trunk announce'
      display_name: Trunk Announce
      id: trunk-announce
      notify_on_error: false
      run: trunk show-announcements "${hook}" -- "${@}"
      triggers:
        - git_hooks:
            - post-checkout
            - post-merge
            - pre-rebase
    - autogenerated_definition_path: actions/trunk
      description: Run 'trunk fmt' whenever you run 'git commit'
      display_name: Trunk Fmt Pre-Commit Hook
      id: trunk-fmt-pre-commit
      interactive: optional
      notify_on_error: false
      run: trunk fmt -t "git-commit" --index-file '${env.GIT_INDEX_FILE}' --upstream=HEAD
      triggers:
        - git_hooks:
            - pre-commit
    - autogenerated_definition_path: actions/trunk
      description: Run 'trunk check' whenever you run 'git commit'
      display_name: Trunk Check Pre-Commit Hook
      id: trunk-check-pre-commit
      interactive: optional
      notify_on_error: false
      run: trunk check -n -t "git-commit" --index-file '${env.GIT_INDEX_FILE}' --upstream=HEAD
      triggers:
        - git_hooks:
            - pre-commit
    - autogenerated_definition_path: actions/trunk
      description: Run 'trunk check' whenever you run 'git push'
      display_name: Trunk Check Pre-Push Hook
      id: trunk-check-pre-push
      interactive: true
      notify_on_error: false
      run: trunk check -n -t git-push --commit-ref-from-pre-push '${hook_stdin_path}'
      triggers:
        - git_hooks:
            - pre-push
    - autogenerated_definition_path: actions/trunk
      description: Always run 'trunk check' whenever you run 'git push'
      display_name: Trunk Check Pre-Push Hook (Always)
      id: trunk-check-pre-push-always
      interactive: optional
      notify_on_error: false
      run: trunk check -n -t git-push --commit-ref-from-pre-push '${hook_stdin_path}'
      triggers:
        - git_hooks:
            - pre-push
    - autogenerated_definition_path: linters/trufflehog
      description: Don't allow secrets in commits (via Trufflehog). Enable linter 'trufflehog-git' before running
      display_name: Trufflehog Pre-Commit Hook
      id: trufflehog-pre-commit
      interactive: optional
      notify_on_error: false
      run: trunk check -t "git-commit" --upstream=HEAD --filter=trufflehog-git
      triggers:
        - git_hooks:
            - pre-commit
lint:
  comment_formats:
    - name: brace-hyphen-block
      leading_delimiter: "{-"
      trailing_delimiter: -}
    - name: brace-slashes-block
      leading_delimiter: "{/*"
      trailing_delimiter: "*/}"
    - name: brace-slashes-block-spaced
      leading_delimiter: "{ /*"
      trailing_delimiter: "*/ }"
    - name: dashes-block
      leading_delimiter: --[[
      trailing_delimiter: --]]
    - name: dashes-inline
      leading_delimiter: --
    - name: hash
      leading_delimiter: "#"
    - name: html-tag
      leading_delimiter: <!--
      trailing_delimiter: -->
    - name: hyphen-hash
      leading_delimiter: -#
    - name: percent-inline
      leading_delimiter: \%
    - name: pod-comment
      leading_delimiter: =begin comment
      trailing_delimiter: =end comment
    - name: slashes-block
      leading_delimiter: /*
      trailing_delimiter: "*/"
    - name: slashes-inline
      leading_delimiter: //
    - name: slashes-xml
      leading_delimiter: ///
  files:
    - name: dart
      extensions:
        - dart
    - name: circleci-config
      comments:
        - hash
      filenames:
        - .circleci/config.yml
    - name: ALL
      regexes:
        - .+
    - name: apex
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - cls
        - page
        - tgr
    - name: bazel-build
      comments:
        - hash
      extensions:
        - BUILD
      filenames:
        - BUILD
        - BUILD.bazel
    - name: bazel-workspace
      comments:
        - hash
      filenames:
        - WORKSPACE
        - WORKSPACE.bazel
    - name: bazel-module
      comments:
        - hash
      filenames:
        - MODULE.bazel
    - name: bazel
      inherit:
        - bazel-build
        - bazel-workspace
        - bazel-module
    - name: c
      inherit:
        - c-header
        - c-source
    - name: c#
      comments:
        - slashes-block
        - slashes-inline
        - slashes-xml
      extensions:
        - cs
    - name: c++
      inherit:
        - c++-header
        - c++-source
    - name: c++-header
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - H
        - hh
        - hpp
        - hxx
    - name: c++-source
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - C
        - cc
        - cpp
        - cxx
    - name: c-header
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - h
    - name: c-source
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - c
    - name: c/c++
      inherit:
        - c
        - c++
    - name: c/c++-source
      inherit:
        - c-source
        - c++-source
    - name: cloudformation
      extensions:
        - yaml
        - yml
      required_yaml_keys:
        - AWSTemplateFormatVersion
    - name: cmake
      extensions:
        - cmake
      filenames:
        - CMakeLists.txt
    - name: css
      comments:
        - slashes-block
      extensions:
        - css
    - name: cuda
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - cu
    - name: cue
      comments:
        - slashes-inline
      extensions:
        - cue
    - name: ddl
      comments:
        - dashes-inline
        - slashes-block
      extensions:
        - ddl
    - name: dml
      comments:
        - dashes-inline
        - slashes-block
      extensions:
        - dml
    - name: docker
      comments:
        - hash
      extensions:
        - dockerfile
        - Dockerfile
      filenames:
        - dockerfile
        - Dockerfile
      regexes:
        - (?i)(?:^|/)Dockerfile\..+$
    - name: dotenv
      comments:
        - hash
      extensions:
        - env
    - name: dustilock
      filenames:
        - package.json
        - requirements.txt
    - name: gemspec
      extensions:
        - gemspec
      filenames:
        - Gemfile
    - name: github-workflow
      comments:
        - hash
      regexes:
        - .github/workflows/.+\.yaml
        - .github/workflows/.+\.yml
    - name: go
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - go
    - name: go-lockfile
      filenames:
        - go.mod
        - go.sum
        - Gopkg.lock
        - Gopkg.toml
    - name: graphql
      comments:
        - hash
      extensions:
        - gql
        - graphql
    - name: graphql-schema
      comments:
        - hash
      extensions:
        - graphqls
    - name: haml
      comments:
        - hyphen-hash
      extensions:
        - haml
    - name: haskell
      comments:
        - brace-hyphen-block
        - dashes-inline
      extensions:
        - hs
        - lhs
    - name: hcl
      comments:
        - hash
        - slashes-block
        - slashes-inline
      extensions:
        - hcl
    - name: html
      comments:
        - html-tag
      extensions:
        - html
    - name: java
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - java
    - name: javascript
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - cjs
        - js
        - mjs
      inherit:
        - javascript-xml
    - name: javascript-xml
      comments:
        - slashes-block
        - slashes-inline
        - brace-slashes-block
        - brace-slashes-block-spaced
      extensions:
        - jsx
    - name: json
      extensions:
        - json
        - jsonc
    - name: jupyter
      extensions:
        - ipynb
    - name: kotlin
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - kt
        - ktm
        - kts
    - name: latex
      comments:
        - percent-inline
      extensions:
        - tex
    - name: lockfile
      filenames:
        - Cargo.lock
        - Podfile.lock
        - composer.lock
        - conan.lock
        - go.mod
        - go.sum
        - buildscript-gradle.lockfile
        - gradle.lockfile
        - pom.xml
        - mix.lock
        - package-lock.json
        - pnpm-lock.yaml
        - yarn.lock
        - packages.lock.json
        - packages.config
        - pubspec.lock
        - requirements.txt
        - Pipfile.lock
        - poetry.lock
        - pdm.lock
        - Gemfile.lock
        - renv.lock
    - name: lua
      comments:
        - dashes-block
        - dashes-inline
      extensions:
        - lua
      shebangs:
        - lua
    - name: markdown
      comments:
        - html-tag
      extensions:
        - md
        - mdx
    - name: nix
      extensions:
        - nix
    - name: objective-c-source
      extensions:
        - m
    - name: perl
      comments:
        - hash
        - pod-comment
      extensions:
        - pl
        - PL
        - pm
        - pod
        - psgi
        - t
    - name: php
      comments:
        - hash
        - slashes-block
        - slashes-inline
      extensions:
        - phar
        - php
        - php3
        - php4
        - php5
        - phps
        - pht
        - phtml
        - phtml
    - name: png
      extensions:
        - png
    - name: postcss
      extensions:
        - pcss
        - postcss
    - name: powershell
      extensions:
        - ps1
        - psm1
        - psd1
    - name: prettier_supported_configs
      filenames:
        - .prettierrc
        - .stylelintrc
    - name: prisma
      comments:
        - slashes-inline
      extensions:
        - prisma
    - name: proto
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - proto
    - name: python
      comments:
        - hash
      extensions:
        - py
        - py2
        - py3
      shebangs:
        - python
        - python3
    - name: python-interface
      comments:
        - hash
      extensions:
        - pyi
    - name: rego
      comments:
        - hash
      extensions:
        - rego
    - name: ruby
      extensions:
        - rb
      shebangs:
        - ruby
    - name: rust
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - rs
    - name: sass
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - sass
        - scss
    - name: scala
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - scala
        - sc
    - name: shell
      comments:
        - hash
      extensions:
        - bash
        - sh
      shebangs:
        - bash
        - sh
    - name: sql
      comments:
        - dashes-inline
        - slashes-block
      extensions:
        - sql
    - name: sql-j2
      comments:
        - dashes-inline
        - slashes-block
      extensions:
        - sql.j2
    - name: starlark
      comments:
        - hash
      extensions:
        - bzl
    - name: storyboard
      extensions:
        - storyboard
    - name: strings
      extensions:
        - strings
        - stringsdict
    - name: svelte
      comments:
        - html-tag
      extensions:
        - svelte
    - name: svg
      comments:
        - html-tag
      extensions:
        - svg
    - name: swift
      extensions:
        - swift
    - name: terraform
      comments:
        - hash
        - slashes-inline
        - slashes-block
      extensions:
        - tf
        - tf.json
    - name: textproto
      comments:
        - hash
      extensions:
        - pbtxt
        - textpb
        - textproto
        - txtpb
    - name: tfvars
      extensions:
        - tfvars
    - name: toml
      comments:
        - hash
      extensions:
        - toml
    - name: typescript
      comments:
        - slashes-block
        - slashes-inline
      extensions:
        - mts
        - ts
      inherit:
        - typescript-xml
    - name: typescript-xml
      comments:
        - slashes-block
        - slashes-inline
        - brace-slashes-block
        - brace-slashes-block-spaced
      extensions:
        - tsx
    - name: xib
      extensions:
        - xib
    - name: xml
      extensions:
        - xml
    - name: yaml
      comments:
        - hash
      extensions:
        - yaml
        - yml
    - name: zsh
      comments:
        - hash
      extensions:
        - zsh
      shebangs:
        - zsh
    - name: package-json
      filenames:
        - package.json
    - name: renovate-config
      filenames:
        - renovate.json
        - renovate.json5
        - .renovaterc.json
        - .renovaterc.json5
  downloads:
    - name: buf
      version: 1.0.0-rc11
      executable: true
      downloads:
        - os:
            macos: ""
          url: https://github.com/bufbuild/buf/releases/download/v${version}/buf-Darwin-x86_64
          version: <0.42.0
        - os:
            linux: Linux
          cpu:
            arm_64: aarch64
            x86_64: x86_64
          url: https://github.com/bufbuild/buf/releases/download/v${version}/buf-${os}-${cpu}
        - os:
            macos: Darwin
          cpu:
            x86_64: x86_64
            arm_64: arm64
          url: https://github.com/bufbuild/buf/releases/download/v${version}/buf-${os}-${cpu}
        - os:
            windows: ""
          cpu:
            x86_64: x86_64
            arm_64: arm64
          url: https://github.com/bufbuild/buf/releases/download/v${version}/buf-Windows-${cpu}.exe
    - name: detekt
      version: 1.19.0
      downloads:
        - url: https://github.com/detekt/detekt/releases/download/v${version}/detekt-cli-${version}.zip
          strip_components: 1
    - name: google-java-format.jar
      executable: true
      downloads:
        - url: https://github.com/google/google-java-format/releases/download/v${version}/google-java-format-${version}-all-deps.jar
    - name: ktlint
      version: 0.43.2
      executable: true
      downloads:
        - url: https://github.com/pinterest/ktlint/releases/download/${version}/ktlint
    - name: nancy
      version: 1.0.41
      downloads:
        - os:
            macos: darwin
            linux: linux
          cpu:
            arm_64: arm64
            x86_64: amd64
          url: https://github.com/sonatype-nexus-community/nancy/releases/download/v${version}/nancy-v${version}-${os}-${cpu}.tar.gz
        - os:
            windows: ""
          cpu:
            arm_64: arm64
            x86_64: amd64
          url: https://github.com/sonatype-nexus-community/nancy/releases/download/v${version}/nancy-v${version}-windows-${cpu}.zip
    - name: oxipng
      downloads:
        - os:
            macos: ""
          url: https://github.com/shssoichiro/oxipng/releases/download/v${version}/oxipng-${version}-x86_64-apple-darwin.tar.gz
          strip_components: 1
        - os:
            linux: ""
          cpu:
            x86_64: ""
          url: https://github.com/shssoichiro/oxipng/releases/download/v${version}/oxipng-${version}-x86_64-unknown-linux-musl.tar.gz
          strip_components: 1
        - os:
            windows: ""
          cpu:
            x86_64: ""
          url: https://github.com/shssoichiro/oxipng/releases/download/v${version}/oxipng-${version}-x86_64-pc-windows-msvc.zip
          version: ">=9.0.0"
          strip_components: 1
        - os:
            windows: ""
          cpu:
            x86_64: ""
          url: https://github.com/shssoichiro/oxipng/releases/download/v${version}/oxipng-${version}-x86_64-pc-windows-msvc.zip
    - name: pmd
      args:
        semver: ${version}=>(pmd_releases\/)*(?P<semver>.*)
      downloads:
        - url: https://github.com/pmd/pmd/releases/download/pmd_releases%2F${semver}/pmd-dist-${semver}-bin.zip
          version: ">=7.0.0"
          strip_components: 1
        - url: https://github.com/pmd/pmd/releases/download/pmd_releases%2F${semver}/pmd-bin-${semver}.zip
          strip_components: 1
  definitions:
    - name: actionlint
      commands:
        - output: actionlint
          success_codes:
            - 0
            - 1
          name: lint
          run: actionlint -format "{{json .}}" ${target}
      files:
        - github-workflow
      autogenerated_definition_path: linters/actionlint
      description: Verify your Github workflows
      direct_configs:
        - .github/actionlint.yaml
        - .github/actionlint.yml
      environment:
        - name: PATH
          list:
            - ${linter}
      issue_url_format: https://github.com/rhysd/actionlint/blob/main/docs/checks.md
      known_good_version: 1.6.9
      suggest_if: files_present
      tools:
        - actionlint
      version_command:
        parse_regex: ${semver}
        run: actionlint --version
    - name: ansible-lint
      commands:
        - output: sarif
          success_codes:
            - 0
            - 2
            - 5
          name: lint
          run: ansible-lint -f sarif
          run_from: ${target_directory}
          version: ">=6.1.0"
        - output: ansible_lint
          success_codes:
            - 0
            - 2
          name: lint
          run: ansible-lint --parseable-severity
          run_from: ${target_directory}
          version: ">=5.1.3"
      autogenerated_definition_path: linters/ansible-lint
      description: Improve ansible playbooks
      direct_configs:
        - .ansible-lint
      environment:
        - name: PATH
          list:
            - ${env.PATH}
      issue_url_format: https://ansible-lint.readthedocs.io/en/latest/default_rules.html#{}
      known_bad_versions:
        - 6.0.1
        - 6.0.2
        - 6.12.0
        - 6.12.1
        - 6.12.2
        - 6.14.5
      known_good_version: 6.13.0
      suggest_if: never
      supported_platforms:
        - linux
        - macos
      tools:
        - ansible-lint
      version_command:
        parse_regex: ${semver}
        run: ansible-lint --version
    - name: autopep8
      commands:
        - output: rewrite
          success_codes:
            - 0
            - 2
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: autopep8 --in-place ${target}
      files:
        - python
      affects_cache:
        - .flake8
        - pyproject.toml
        - setup.cfg
        - tox.ini
      autogenerated_definition_path: linters/autopep8
      description: A python formatter
      direct_configs:
        - .pep8
      issue_url_format: https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes
      known_good_version: 2.0.4
      suggest_if: config_present
      tools:
        - autopep8
      version_command:
        parse_regex: autopep8 ${semver}
        run: autopep8 --version
    - name: bandit
      commands:
        - output: bandit
          success_codes:
            - 0
          batch: true
          cache_results: true
          is_security: true
          name: lint
          read_output_from: tmp_file
          run: bandit --exit-zero --ini .bandit --format json --output ${tmpfile} ${target}
      files:
        - python
      autogenerated_definition_path: linters/bandit
      description: A security linter for Python
      direct_configs:
        - .bandit
      issue_url_format: https://pypi.org/project/bandit/
      known_good_version: 1.7.3
      suggest_if: files_present
      tools:
        - bandit
      version_command:
        parse_regex: ${semver}
        run: bandit --version
    - name: biome
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          name: lint
          parse_regex: " *(?P<path>.*?):(?P<line>\\d+):(?P<col>\\d+) (?P<code>[^ ]+)(?:[^×]*\\n).*× (?P<message>.*)\\n"
          read_output_from: stderr
          run: biome check ${target}
        - output: rewrite
          success_codes:
            - 0
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: fmt
          run: biome format --write "${target}"
      files:
        - typescript
        - javascript
        - json
      affects_cache:
        - package.json
        - .editorconfig
      autogenerated_definition_path: linters/biome
      description: A static analyzer for web projects
      direct_configs:
        - biome.json
        - rome.json
      known_good_version: 1.4.1
      suggest_if: config_present
      tools:
        - biome
      version_command:
        parse_regex: biome CLI version ${semver}
        run: biome --version
    - name: black
      commands:
        - output: rewrite
          success_codes:
            - 0
          allow_empty_files: false
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: black -q ${target}
      files:
        - python
        - jupyter
        - python-interface
      affects_cache:
        - pyproject.toml
      autogenerated_definition_path: linters/black
      description: Uncompromising python formatter
      known_good_version: 22.3.0
      suggest_if: files_present
      tools:
        - black
      version_command:
        parse_regex: black, version (.*)
        run: black --version
    - name: black-py
      commands:
        - output: rewrite
          success_codes:
            - 0
          allow_empty_files: false
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: black -q ${target}
      files:
        - python
      affects_cache:
        - pyproject.toml
      autogenerated_definition_path: linters/black
      deprecated: "'black-py' is now handled by 'black'. Please delete 'black-py' from your config"
      formatter: true
      known_good_version: 22.3.0
      package: black[python2]
      runtime: python
      suggest_if: never
      version_command:
        parse_regex: black, version (.*)
        run: black --version
    - name: brakeman
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
            - 3
          name: lint
          run: brakeman -f sarif --no-pager
          run_from: ${target_directory}
          target: ${parent_with(app)}
          version: ">=5.0.0"
        - output: brakeman
          success_codes:
            - 0
            - 1
            - 3
          name: lint
          run: brakeman -p ${target} -f json --no-pager
          run_from: apps
          target: ${parent_with(app)}
      files:
        - ruby
      autogenerated_definition_path: linters/brakeman
      description: A vulnerability scanner for Ruby
      direct_configs:
        - brakeman.ignore
      known_good_version: 5.4.0
      suggest_if: files_present
      tools:
        - brakeman
      version_command:
        parse_regex: ${semver}
        run: brakeman --version
    - name: buf-breaking
      commands:
        - output: buf
          success_codes:
            - 0
            - 1
            - 100
          cache_results: false
          name: lint
          run: buf breaking --against .git#branch=${upstream-ref} --error-format json --disable-symlinks
          run_from: ${root_or_parent_with(buf.work.yaml)}
          sandbox_type: copy_targets
          target: ${root_or_parent_with(buf.work.yaml)}
      files:
        - proto
      affects_cache:
        - buf.lock
        - buf.gen.yaml
        - buf.work.yaml
      autogenerated_definition_path: linters/buf
      description: Check for breaking Protobuf API changes
      direct_configs:
        - buf.yaml
        - buf.work.yaml
      download: buf
      environment:
        - name: PATH
          list:
            - ${linter}
            - ${env.PATH}
        - name: BUF_TOKEN
          list:
            - ${env.BUF_TOKEN}
          optional: true
      issue_url_format: https://docs.buf.build/breaking/rules#{}
      known_good_version: 1.5.0
      suggest_if: never
      version_command:
        parse_regex: ${semver}
        run: buf --version
    - name: buf-format
      commands:
        - output: rewrite
          success_codes:
            - 0
            - 100
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: buf format -w --path=${target}
      files:
        - proto
      affects_cache:
        - buf.lock
        - buf.gen.yaml
        - buf.work.yaml
      autogenerated_definition_path: linters/buf
      description: Formatter for Protobuf
      direct_configs:
        - buf.yaml
      download: buf
      environment:
        - name: PATH
          list:
            - ${linter}
            - ${env.PATH}
        - name: BUF_TOKEN
          list:
            - ${env.BUF_TOKEN}
          optional: true
      issue_url_format: https://docs.buf.build/lint/rules#{}
      known_good_version: 1.17.0
      suggest_if: never
      version_command:
        parse_regex: ${semver}
        run: buf --version
    - name: buf-lint
      commands:
        - output: buf
          success_codes:
            - 0
            - 100
          name: lint
          run: buf lint --path ${target} --error-format json
          run_from: ${root_or_parent_with(buf.yaml)}
      files:
        - proto
      affects_cache:
        - buf.lock
        - buf.gen.yaml
        - buf.work.yaml
      autogenerated_definition_path: linters/buf
      description: Accelerate Protobuf development with Buf
      direct_configs:
        - buf.yaml
      download: buf
      environment:
        - name: PATH
          list:
            - ${linter}
        - name: BUF_TOKEN
          list:
            - ${env.BUF_TOKEN}
          optional: true
      issue_url_format: https://docs.buf.build/lint/rules#{}
      known_good_version: 1.17.0
      suggest_if: config_present
      version_command:
        parse_regex: ${semver}
        run: buf --version
    - name: buildifier
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: fix
          run: buildifier --lint=fix --warnings=all "${target}"
        - output: buildifier
          success_codes:
            - 0
          batch: true
          cache_results: true
          name: warn
          run: buildifier --lint=warn --warnings=all --format=json --mode=check "${target}"
      files:
        - bazel
        - starlark
      autogenerated_definition_path: linters/buildifier
      description: Formatter for Bazel files
      direct_configs:
        - .buildifier.json
        - .buildifier-tables.json
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 6.1.0
      suggest_if: files_present
      tools:
        - buildifier
      version_command:
        parse_regex: ${semver}
        run: buildifier --version
    - name: cfnlint
      commands:
        - output: cfnlint
          error_codes:
            - 32
          batch: true
          cache_results: true
          name: lint
          run: cfn-lint -t ${target} -f=json
      files:
        - cloudformation
      autogenerated_definition_path: linters/cfnlint
      description: Checks Cloudformation files
      issue_url_format: https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/rules.md
      known_good_version: 0.58.2
      suggest_if: files_present
      tools:
        - cfnlint
      version_command:
        parse_regex: ${semver}
        run: cfn-lint --version
    - name: checkov
      commands:
        - output: sarif_uri
          success_codes:
            - 0
          batch: true
          is_security: true
          name: lint
          platforms:
            - windows
          read_output_from: tmp_file
          run: checkov.cmd -f ${target} -o sarif --output-file-path ${tmpfile}, --soft-fail
        - output: sarif_uri
          success_codes:
            - 0
          batch: true
          is_security: true
          name: lint
          read_output_from: tmp_file
          run: checkov -f ${target} -o sarif --output-file-path ${tmpfile}, --soft-fail
      files:
        - terraform
        - cloudformation
        - docker
        - yaml
        - json
      autogenerated_definition_path: linters/checkov
      description: Finds security issues in IaC files
      direct_configs:
        - .checkov.yml
        - .checkov.yaml
      known_good_version: 2.3.75
      suggest_if: files_present
      tools:
        - checkov
    - name: circleci
      commands:
        - output: pass_fail
          success_codes:
            - 0
            - 1
          name: validate
          platforms:
            - windows
          read_output_from: stderr
          run: sh ${plugin}/linters/circleci/run.sh ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          name: validate
          read_output_from: stderr
          run: ${plugin}/linters/circleci/run.sh ${target}
      files:
        - circleci-config
      autogenerated_definition_path: linters/circleci
      description: Validates CircleCI configuration files
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 0.1.28811
      suggest_if: never
      tools:
        - circleci
      version_command:
        parse_regex: ${semver}
        run: circleci version
    - name: clang-format
      commands:
        - output: rewrite
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: clang-format -i ${target}
      files:
        - c/c++
        - cuda
        - proto
      autogenerated_definition_path: linters/clang-format
      description: Formatter for C/C++ and Protobuf
      direct_configs:
        - .clang-format
      known_good_version: 16.0.3
      suggest_if: config_present
      supported_platforms:
        - linux
        - macos
      tools:
        - clang-format
      version_command:
        parse_regex: ${semver}
        run: clang-format --version
    - name: clang-tidy
      commands:
        - output: llvm
          success_codes:
            - 0
            - 1
          cache_results: true
          max_concurrency: 4
          name: lint
          read_output_from: tmp_file
          run: clang-tidy --export-fixes=${tmpfile} ${target} -p ${compile_commands_dir}
          run_from: ${compile_command}
          run_when:
            - cli
            - monitor
            - ci
      files:
        - c/c++-source
      autogenerated_definition_path: linters/clang-tidy
      description: Static Analyzer for C/C++
      direct_configs:
        - .clang-tidy
      environment:
        - name: PATH
          list:
            - ${linter}/bin
      include_scanner_type: compile_command
      issue_url_format: https://clang.llvm.org/extra/clang-tidy/checks/list.html
      known_good_version: 16.0.3
      query_compile_commands: true
      run_timeout: 10m
      suggest_if: config_present
      supported_platforms:
        - linux
        - macos
      tools:
        - clang-tidy
      version_command:
        parse_regex: ${semver}
        run: clang-tidy --version
    - name: clippy
      commands:
        - output: clippy
          success_codes:
            - 0
            - 101
            - 383
          disable_upstream: true
          name: lint
          run: cargo clippy --message-format json --locked -- --cap-lints=warn --no-deps
          run_from: ${target_directory}
          target: ${parent_with(Cargo.toml)}
      files:
        - rust
      affects_cache:
        - Cargo.toml
        - Cargo.lock
      autogenerated_definition_path: linters/clippy
      description: Catch common mistakes and improve your Rust code.
      direct_configs:
        - clippy.toml
        - .clippy.toml
      download: rust
      environment:
        - name: PATH
          list:
            - ${linter}/bin
            - ${env.PATH}
        - name: CARGO_HOME
          value: ${cachedir}/cargo_home
        - name: CARGO_TARGET_DIR
          value: ${cachedir}/cargo_target_dir
      issue_url_format: https://rust-lang.github.io/rust-clippy/master/#{}
      known_good_version: 1.65.0
      suggest_if: files_present
      version_command:
        parse_regex: ${semver}
        run: cargo clippy --version
    - name: cmake-format
      commands:
        - output: rewrite
          success_codes:
            - 0
            - 1
          formatter: true
          in_place: true
          name: fix
          run: cmake-format -i ${target}
      files:
        - cmake
      autogenerated_definition_path: linters/cmake-format
      description: A formatter for cmake files
      direct_configs:
        - .cmake-format.json
        - .cmake-format.py
        - .cmake-format.yaml
        - cmake-format.json
        - cmake-format.py
        - cmake-format.yaml
      known_good_version: 0.6.13
      suggest_if: config_present
      tools:
        - cmake-format
      version_command:
        parse_regex: ${semver}
        run: cmake-format --version
    - name: codespell
      commands:
        - output: sarif
          success_codes:
            - 0
            - 65
          batch: true
          cache_results: true
          name: lint
          parser:
            run: python3 ${plugin}/linters/codespell/codespell_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: codespell ${target}
      files:
        - ALL
      affects_cache:
        - pyproject.toml
        - setup.cfg
      autogenerated_definition_path: linters/codespell
      description: Check for common misspellings in your code
      direct_configs:
        - .codespellrc
      known_bad_versions:
        - 2.2.3
      known_good_version: 2.2.2
      suggest_if: config_present
      tools:
        - codespell
    - name: cspell
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: false
          name: lint
          parse_regex: ((?P<path>.*):(?P<line>\d+):(?P<col>\d+) - (?P<message>.*))
          read_output_from: stdout
          run: cspell --no-progress --no-summary --show-suggestions --no-cache ${target}
          sandbox_type: copy_targets
      files:
        - ALL
      affects_cache:
        - package.json
      autogenerated_definition_path: linters/cspell
      description: Check for spelling mistakes in your code
      direct_configs:
        - .cspell.json
        - cspell.json
        - .cSpell.json
        - cSpell.json
        - cspell.config.js
        - cspell.config.cjs
        - cspell.config.json
        - cspell.config.yaml
        - cspell.config.yml
        - cspell.yaml
        - cspell.yml
      known_good_version: 7.0.0
      suggest_if: never
      tools:
        - cspell
      version_command:
        parse_regex: ${semver}
        run: cspell --version
    - name: cue-fmt
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          run: cue fmt ${target}
      files:
        - cue
      autogenerated_definition_path: linters/cue-fmt
      description: A formatter for cue files
      known_good_version: 0.5.0
      suggest_if: files_present
      tools:
        - cue-fmt
      version_command:
        parse_regex: cue version ${semver} .*
        run: cue version
    - name: dart
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          run: dart format ${target}
        - output: rewrite
          success_codes:
            - 0
          batch: true
          fix_prompt: Quick fix available
          fix_verb: fix
          in_place: true
          name: fix
          run: dart fix --apply ${target}
        - output: regex
          success_codes:
            - 0
            - 3
          batch: true
          name: analyze
          parse_regex: \s*(?P<severity>.*) - (?P<path>.*):(?P<line>\d+):(?P<col>\d+) - (?P<message>.*) - (?P<code>.*)
          run: dart analyze --no-fatal-warnings ${target}
          run_from: ${parent}
      files:
        - dart
      affects_cache:
        - analysis_options.yaml
        - pubspec.yaml
      autogenerated_definition_path: linters/dart
      description: Lints and formats dart code
      known_good_version: 3.2.6
      main_tool: dart
      suggest_if: never
    - name: deno
      commands:
        - output: rewrite
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: deno fmt ${target}
      files:
        - javascript
        - typescript
        - markdown
        - json
      autogenerated_definition_path: linters/deno
      description: A formatter for web framework code
      direct_configs:
        - deno.json
        - deno.jsonc
      known_good_version: 1.36.4
      suggest_if: config_present
      tools:
        - deno
      version_command:
        parse_regex: deno ${semver} .*
        run: deno --version
    - name: detekt
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
            - 2
          batch: true
          cache_results: true
          name: lint
          platforms:
            - windows
          read_output_from: tmp_file
          run: detekt-cli --build-upon-default-config --config .detekt.yaml --input ${target,} --report sarif:${tmpfile}
        - output: sarif
          success_codes:
            - 0
            - 2
          batch: true
          cache_results: true
          name: lint
          read_output_from: tmp_file
          run: detekt-cli --build-upon-default-config --config .detekt.yaml --input ${target,} --report sarif:${tmpfile}
      files:
        - kotlin
      autogenerated_definition_path: linters/detekt
      description: Static code analysis for Kotlin
      direct_configs:
        - .detekt.yaml
      download: detekt
      environment:
        - name: PATH
          list:
            - ${env.PATH}
      known_good_version: 1.19.0
      runtime: java
      suggest_if: never
      version_command:
        parse_regex: ${semver}
        run: detekt-cli --version
    - name: detekt-explicit
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
            - 2
          name: lint
          platforms:
            - windows
          read_output_from: tmp_file
          run: detekt-cli --config .detekt.yaml --input ${target} --report sarif:${tmpfile} --auto-correct
        - output: sarif
          success_codes:
            - 0
            - 2
          name: lint
          read_output_from: tmp_file
          run: detekt-cli --config .detekt.yaml --input ${target} --report sarif:${tmpfile} --auto-correct
      files:
        - kotlin
      autogenerated_definition_path: linters/detekt
      description: Static code analysis for Kotlin
      direct_configs:
        - .detekt.yaml
      download: detekt
      environment:
        - name: PATH
          list:
            - ${env.PATH}
      known_good_version: 1.19.0
      runtime: java
      suggest_if: never
      version_command:
        parse_regex: ${semver}
        run: detekt-cli --version
    - name: detekt-gradle
      commands:
        - output: detekt_gradle
          success_codes:
            - 0
            - 1
          disable_upstream: true
          name: lint
          run: sh ${workspace}/gradlew detekt --info --continue
          target: .
      files:
        - kotlin
      autogenerated_definition_path: linters/detekt
      description: Static code analysis for Kotlin
      environment:
        - name: GRADLE_OPTS
          optional: true
          value: ${env.GRADLE_OPTS}
        - name: GRADLE_USER_HOME
          optional: true
          value: ${env.GRADLE_USER_HOME}
        - name: JAVA_HOME
          optional: true
          value: ${env.JAVA_HOME}
        - name: LANG
          optional: true
          value: ${env.LANG}
        - name: PATH
          list:
            - ${env.PATH}
        - name: GRADLE_ENTERPRISE_ACCESS_KEY
          optional: true
          value: ${env.GRADLE_ENTERPRISE_ACCESS_KEY}
      run_timeout: 10m
      suggest_if: never
      supported_platforms:
        - linux
        - macos
    - name: djlint
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          name: lint
          parse_regex: ((?P<path>.*):(?P<line>-?\d+):(?P<col>-?\d+) - (?P<code>\w\d+) - (?P<message>.*))
          run: djlint ${target} --quiet
        - output: rewrite
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: fmt
          run: djlint ${target} --quiet --reformat
      files:
        - html
      affects_cache:
        - .flake8
        - pyproject.toml
        - setup.cfg
        - tox.ini
      autogenerated_definition_path: linters/djlint
      description: HTML template linter and formatter
      direct_configs:
        - .djlintrc
      issue_url_format: https://www.djlint.com/docs/linter/#rules
      known_good_version: 1.19.16
      suggest_if: config_present
      tools:
        - djlint
      version_command:
        parse_regex: djlint, version ${semver}
        run: djlint --version
    - name: dotenv-linter
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: dotenv-linter --not-check-updates fix --quiet --no-backup ${target}
      files:
        - dotenv
      autogenerated_definition_path: linters/dotenv-linter
      description: Lightning-fast linter for .env files
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 3.3.0
      suggest_if: files_present
      tools:
        - dotenv-linter
      version_command:
        parse_regex: dotenv-linter ${semver}
        run: dotenv-linter --version
    - name: dotnet-format
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          run: dotnet format --no-restore --include ${target}
          run_from: ${root_or_parent_with_regex((.+\.csproj)|(.+\.sln))}
      files:
        - c#
      affects_cache:
        - buf.lock
        - .editorconfig
      autogenerated_definition_path: linters/dotnet-format
      description: A formatter for dotnet files
      environment:
        - name: DOTNET_CLI_TELEMETRY_OPTOUT
          value: 1
        - name: DOTNET_GENERATE_ASPNET_CERTIFICATE
          value: 0
        - name: DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX
          value: 0
        - name: DOTNET_CLI_WORKLOAD_UPDATE_NOTIFY_DISABLE
          value: 1
      known_good_version: 7.0.400
      main_tool: dotnet
      run_timeout: 1m
      suggest_if: never
    - name: dustilock
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
          batch: false
          is_security: true
          name: scan
          parse_regex: (error - (?P<message>(?P<code>python|npm)[^.]*\.) (?P<path>(\/|[A-Za-z]:\\).*))
          read_output_from: stderr
          run: dustilock --path ${target}
          target: ${parent}
      files:
        - dustilock
      autogenerated_definition_path: linters/dustilock
      description: Finds security issues in dustilock files
      known_good_version: 1.2.0
      suggest_if: never
      tools:
        - dustilock
    - name: eslint
      commands:
        - output: eslint
          error_codes:
            - 2
          batch: true
          direct_configs:
            - eslint.config.js
            - eslint.config.mjs
            - eslint.config.cjs
          name: lint
          read_output_from: tmp_file
          run: eslint --output-file ${tmpfile} --format json ${target}
          version: ">=9.0.0"
        - output: eslint
          error_codes:
            - 2
          batch: true
          direct_configs:
            - .eslintrc
            - .eslintrc.cjs
            - .eslintrc.js
            - .eslintrc.json
            - .eslintrc.mjs
            - .eslintrc.yaml
            - .eslintrc.yml
          name: lint
          read_output_from: tmp_file
          run: eslint --output-file ${tmpfile} --format json ${target}
          version: <=8.57.0
      files:
        - typescript
        - javascript
      affects_cache:
        - .eslintignore
        - package.json
        - tsconfig.json
      autogenerated_definition_path: linters/eslint
      description: Find and fix problems in your TS/JS code
      issue_url_format: https://eslint.org/docs/rules/{}
      known_good_version: 8.10.0
      suggest_if: config_present
      tools:
        - eslint
      version_command:
        parse_regex: ${semver}
        run: eslint --version
    - name: flake8
      commands:
        - output: regex
          success_codes:
            - 0
          batch: true
          cache_results: true
          name: lint
          parse_regex: "((?P<path>.*):(?P<line>-?\\d+):(?P<col>-?\\d+): (?P<code>\\S+) (?P<message>.+))"
          read_output_from: tmp_file
          run: flake8 ${target} --output-file "${tmpfile}" --exit-zero
          run_from: ${parent}
      files:
        - python
      affects_cache:
        - setup.cfg
        - tox.ini
        - pyproject.toml
      autogenerated_definition_path: linters/flake8
      description: Python style guide enforcement
      direct_configs:
        - .flake8
      issue_url_format: https://flake8.pycqa.org/en/latest/user/error-codes.html
      known_good_version: 4.0.1
      suggest_if: config_present
      tools:
        - flake8
      version_command:
        parse_regex: ${semver}
        run: flake8 --version
    - name: git-diff-check
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
            - 2
          batch: true
          name: lint
          parse_regex: ((?P<path>.*):(?P<line>-?\d+):(?P<message>.*))
          read_output_from: stdout
          run: git diff --check ${target}
      files:
        - ALL
      autogenerated_definition_path: linters/git-diff-check
      description: Checks for git conflicts
      environment:
        - name: PATH
          list:
            - ${env.PATH}
      suggest_if: files_present
    - name: gitleaks
      commands:
        - output: sarif
          success_codes:
            - 0
            - 101
          allow_empty_files: false
          cache_results: true
          name: lint
          read_output_from: tmp_file
          run: gitleaks detect --no-git --source=${target} --exit-code=101 -f sarif -r "${tmpfile}"
          sandbox_type: copy_targets
      files:
        - ALL
      autogenerated_definition_path: linters/gitleaks
      description: Protect and discover secrets
      direct_configs:
        - .gitleaks.config
        - .gitleaks.toml
        - .gitleaksignore
      known_bad_versions:
        - 8.10.0
        - 8.10.1
      known_good_version: 8.8.7
      suggest_if: config_present
      tools:
        - gitleaks
    - name: gofmt
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: gofmt -w ${target}
      files:
        - go
      autogenerated_definition_path: linters/gofmt
      description: A formatter for Go code
      download: go
      environment:
        - name: PATH
          list:
            - ${linter}/bin
      known_good_version: 1.20.4
      suggest_if: files_present
    - name: gofumpt
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: gofumpt -w ${target}
      files:
        - go
      autogenerated_definition_path: linters/gofumpt
      description: An opinionated formatter for Go code
      environment:
        - name: PATH
          list:
            - ${linter}/bin
      known_good_version: 0.5.0
      suggest_if: never
      tools:
        - gofumpt
      version_command:
        parse_regex: ${semver}
        run: gofumpt --version
    - name: goimports
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: goimports -w ${target}
      files:
        - go
      autogenerated_definition_path: linters/goimports
      description: Removes unused imports from Go code
      environment:
        - name: PATH
          list:
            - ${linter}/bin
      known_good_version: 0.9.1
      suggest_if: never
      tools:
        - goimports
    - name: gokart
      commands:
        - output: sarif
          success_codes:
            - 0
          is_security: true
          name: lint
          read_output_from: stdout
          run: gokart scan -i analyzers.yml -s ${target}
          sandbox_type: expanded
          target: ${parent}
      files:
        - go
      affects_cache:
        - go.mod
        - go.sum
      autogenerated_definition_path: linters/gokart
      description: Checks for security issues in Go code.
      direct_configs:
        - analyzers.yml
      environment:
        - name: PATH
          list:
            - ${linter}
      issue_url_format: https://github.com/praetorian-inc/gokart/issues
      known_good_version: 0.5.1
      run_timeout: 10m
      suggest_if: config_present
      tools:
        - gokart
      version_command:
        parse_regex: ${semver}
        run: gokart version
    - name: golangci-lint
      commands:
        - output: golangci_lint
          success_codes:
            - 0
            - 2
            - 7
          disable_upstream: true
          name: lint
          run: golangci-lint run --out-format json --timeout 10m --concurrency 1 --exclude gofmt --allow-parallel-runners --issues-exit-code 0 ${target}
          run_from: ${root_or_parent_with(go.mod)}
          target: ${parent}
      files:
        - go
      affects_cache:
        - go.mod
        - go.sum
      autogenerated_definition_path: linters/golangci-lint
      description: A powerful Go linter runner
      direct_configs:
        - .golangci.json
        - .golangci.toml
        - .golangci.yaml
        - .golangci.yml
      environment:
        - name: GOLANGCI_LINT_CACHE
          value: ${cachedir}
        - name: PATH
          list:
            - ${env.PATH}
        - name: GO111MODULE
          value: auto
        - name: SSH_AUTH_SOCK
          optional: true
          value: ${env.SSH_AUTH_SOCK}
      issue_url_format: https://golangci-lint.run/usage/linters/
      known_good_version: 1.49.0
      run_timeout: 10m
      suggest_if: files_present
      tools:
        - golangci-lint
      version_command:
        parse_regex: ${semver}
        run: golangci-lint --version
    - name: golines
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: golines -w ${target}
      files:
        - go
      autogenerated_definition_path: linters/golines
      description: Enforces line limits in Go
      known_good_version: 0.11.0
      suggest_if: never
      tools:
        - golines
    - name: google-java-format
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          platforms:
            - windows
          run: java -jar ${linter}/google-java-format.jar.exe --replace ${target}
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          run: java -jar ${linter}/google-java-format.jar --replace ${target}
      files:
        - java
      autogenerated_definition_path: linters/google-java-format
      description: A formatter for Java files
      download: google-java-format.jar
      known_good_version: 1.15.0
      runtime: java
      suggest_if: never
      version_command:
        parse_regex: "google-java-format: Version ${semver}"
        run: java -jar ${linter}/google-java-format.jar.exe --version
    - name: graphql-schema-linter
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
          name: lint
          parser:
            run: python3 ${cwd}/parse.py
            runtime: python
          platforms:
            - windows
          read_output_from: stdout
          run: graphql-schema-linter.cmd -f json ${target}
        - output: sarif
          success_codes:
            - 0
            - 1
          name: lint
          parser:
            run: python3 ${cwd}/parse.py
            runtime: python
          read_output_from: stdout
          run: graphql-schema-linter -f json ${target}
      files:
        - graphql-schema
      affects_cache:
        - package.json
      autogenerated_definition_path: linters/graphql-schema-linter
      description: Validate GraphQL Schema definitions
      direct_configs:
        - .graphql-schema-linter.config.js
        - .graphql-schema-linterrc
      known_good_version: 3.0.1
      suggest_if: config_present
      tools:
        - graphql-schema-linter
    - name: hadolint
      commands:
        - output: hadolint
          success_codes:
            - 0
          cache_results: true
          name: lint
          run: hadolint ${target} -f json --no-fail
      files:
        - docker
      autogenerated_definition_path: linters/hadolint
      description: Helps you build best practice Docker images
      direct_configs:
        - .hadolint.yaml
        - .hadolint.yml
      environment:
        - name: PATH
          list:
            - ${linter}
      issue_url_format: https://github.com/hadolint/hadolint/wiki/{}
      known_good_version: 2.10.0
      run_timeout: 1m
      suggest_if: files_present
      tools:
        - hadolint
      version_command:
        parse_regex: ${semver}
        run: hadolint --version
    - name: haml-lint
      commands:
        - output: haml_lint
          success_codes:
            - 0
            - 65
          batch: true
          cache_results: false
          name: lint
          run: haml-lint ${target} --reporter=json
      files:
        - haml
      autogenerated_definition_path: linters/haml-lint
      description: Keeps HAML files clean and readable
      direct_configs:
        - .haml-lint.yml
      known_good_version: 0.40.0
      suggest_if: files_present
      tools:
        - haml-lint
      version_command:
        parse_regex: ${semver}
        run: haml-lint --version
    - name: include-what-you-use
      commands:
        - output: iwyu
          success_codes:
            - 0
          cache_results: true
          disable_upstream: true
          name: lint
          read_output_from: stderr
          run: include-what-you-use -Xiwyu --no_fwd_decls "${compile_command}"
          run_from: ${compile_command}
      files:
        - c/c++-source
      autogenerated_definition_path: linters/iwyu
      description: Removes unused includes from C/C++ code.
      hold_the_line: false
      include_scanner_type: compile_command
      known_good_version: 0.20
      query_compile_commands: true
      suggest_if: never
      tools:
        - include-what-you-use
      version_command:
        parse_regex: include-what-you-use ([^ ]+).*
        run: include-what-you-use --version
    - name: isort
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          run: isort -q --overwrite-in-place ${target}
      files:
        - python
      affects_cache:
        - pyproject.toml
        - setup.cfg
        - tox.ini
        - .editorconfig
      autogenerated_definition_path: linters/isort
      description: Sorts your Python imports
      direct_configs:
        - .isort.cfg
      issue_url_format: https://pypi.org/project/flake8-isort/
      known_good_version: 5.9.3
      suggest_if: files_present
      tools:
        - isort
      version_command:
        parse_regex: ${semver}
        run: isort --version-number
    - name: ktlint
      commands:
        - output: rewrite
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          platforms:
            - windows
          run: java -jar ${linter}/ktlint.exe -F "${target}"
        - output: rewrite
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: ktlint -F "${target}"
      files:
        - kotlin
      affects_cache:
        - .editorconfig
      autogenerated_definition_path: linters/ktlint
      description: An anti-bikeshedding Kotlin linter and formatter
      download: ktlint
      environment:
        - name: PATH
          list:
            - ${linter}
        - name: LANG
          value: en_US.UTF-8
      known_good_version: 0.43.2
      runtime: java
      suggest_if: files_present
      version_command:
        parse_regex: ${semver}
        run: java -jar ${linter}/ktlint.exe --version
    - name: kube-linter
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
          name: lint
          run: kube-linter lint ${target} --format sarif
      files:
        - yaml
      autogenerated_definition_path: linters/kube-linter
      description: A static analyzer for Kubernetes
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 0.6.4
      suggest_if: never
      tools:
        - kube-linter
    - name: markdown-link-check
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
          cache_results: false
          name: lint
          parser:
            run: python3 ${plugin}/linters/markdown-link-check/parse.py --target="${target}"
            runtime: python
          read_output_from: stdout
          run: markdown-link-check -q "${target}"
      files:
        - markdown
      autogenerated_definition_path: linters/markdown-link-check
      description: Checks markdown files for broken links
      known_good_version: 3.11.2
      suggest_if: never
      tools:
        - markdown-link-check
      version_command:
        parse_regex: ${semver}
        run: markdown-link-check --version
    - name: markdown-table-prettify
      commands:
        - output: rewrite
          success_codes:
            - 0
          formatter: true
          name: format
          read_output_from: stdout
          run: markdown-table-prettify --silent
          std_in: true
      files:
        - markdown
      autogenerated_definition_path: linters/markdown-table-prettify
      description: Prettify markdown tables
      known_good_version: 3.6.0
      main_tool: markdown-table-prettify
      suggest_if: never
    - name: markdownlint
      commands:
        - output: markdownlint
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          name: lint
          run: markdownlint ${target} --json
      files:
        - markdown
      autogenerated_definition_path: linters/markdownlint
      description: A style checker and lint tool for markdown files
      direct_configs:
        - .markdownlint.json
        - .markdownlint.yaml
        - .markdownlint.yml
        - .markdownlintrc
      issue_url_format: https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md#{}
      known_good_version: 0.33.0
      suggest_if: files_present
      tools:
        - markdownlint
      version_command:
        parse_regex: ${semver}
        run: markdownlint --version
    - name: markdownlint-cli2
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          name: lint
          parse_regex: "(?P<path>[^:]+):(?P<line>[\\d+]+)(?::(?P<col>[\\d+]+))? (?P<code>[^ ]+) (?P<message>.*)\n"
          read_output_from: stderr
          run: markdownlint-cli2 ${target} --json
      files:
        - markdown
      affects_cache:
        - package.json
        - .markdownlint.jsonc
        - .markdownlint.json
        - .markdownlint.yaml
        - .markdownlint.yml
        - .markdownlint.cjs
        - .markdownlint.mjs
      autogenerated_definition_path: linters/markdownlint-cli2
      description: A style checker and lint tool for markdown files
      direct_configs:
        - .markdownlint-cli2.jsonc
        - .markdownlint-cli2.yaml
        - .markdownlint-cli2.cjs
        - .markdownlint-cli2.mjs
      issue_url_format: https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md#{}
      known_good_version: 0.14.0
      suggest_if: config_present
      tools:
        - markdownlint-cli2
      version_command:
        parse_regex: ${semver}
        run: markdownlint --version
    - name: mypy
      commands:
        - output: mypy
          success_codes:
            - 0
            - 1
          name: lint
          run: mypy --ignore-missing-imports --follow-imports=silent --show-error-codes --show-column-numbers ${target}
          run_from: ${root_or_parent_with_any_config}
          std_in: false
      files:
        - python
        - python-interface
      affects_cache:
        - pyproject.toml
        - setup.cfg
      autogenerated_definition_path: linters/mypy
      description: Static type checker for Python
      direct_configs:
        - mypy.ini
        - .mypy.ini
      issue_url_format: https://mypy.readthedocs.io/en/stable/error_code_list.html
      known_good_version: 0.931
      suggest_if: config_present
      tools:
        - mypy
      version_command:
        parse_regex: ${semver}
        run: mypy --version
    - name: nancy
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
            - 2
          is_security: true
          name: lint
          parser:
            run: python3 ${plugin}/linters/nancy/parse.py
            runtime: python
          read_output_from: stdout
          run: sh ${plugin}/linters/nancy/run.sh
          target: .
      files:
        - go-lockfile
      autogenerated_definition_path: linters/nancy
      description: Checks for vulnerabilities in your Go dependencies
      download: nancy
      environment:
        - name: PATH
          list:
            - ${runtime}
            - ${linter}
            - ${env.PATH}
        - name: USER
          optional: true
          value: ${env.USER}
      known_good_version: 1.0.41
      runtime: go
      suggest_if: never
      version_command:
        parse_regex: nancy version ${semver}
        run: nancy --version
    - name: nixpkgs-fmt
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: lint
          run: nixpkgs-fmt ${target}
      files:
        - nix
      autogenerated_definition_path: linters/nixpkgs-fmt
      description: Formatter for Nix
      known_good_version: 1.3.0
      package: nixpkgs-fmt
      runtime: rust
      suggest_if: files_present
      supported_platforms:
        - linux
        - macos
    - name: opa
      commands:
        - output: rewrite
          success_codes:
            - 0
          formatter: true
          name: format
          run: opa fmt ${target}
      files:
        - rego
      autogenerated_definition_path: linters/opa
      description: Formatter for OPA files
      known_good_version: 0.62.1
      main_tool: opa
      suggest_if: never
    - name: osv-scanner
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
            - 128
          is_security: true
          name: scan
          parser:
            run: python3 ${plugin}/linters/osv-scanner/osv_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: osv-scanner --lockfile=${target} --format json
      files:
        - lockfile
      autogenerated_definition_path: linters/osv-scanner
      description: Checks for known vulnerabilities in your dependencies
      direct_configs:
        - osv-scanner.toml
      environment:
        - name: PATH
          list:
            - ${linter}
            - ${env.PATH}
      issue_url_format: https://osv.dev/{}
      known_good_version: 1.3.6
      suggest_if: files_present
      tools:
        - osv-scanner
      version_command:
        parse_regex: "version: ${version}"
        run: osv-scanner --version
    - name: oxipng
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          disable_upstream: true
          fix_prompt: Unoptimized image
          fix_verb: fix
          formatter: true
          in_place: true
          name: fmt
          run: oxipng --strip safe ${target}
      files:
        - png
      autogenerated_definition_path: linters/oxipng
      description: Optimize PNG images
      download: oxipng
      environment:
        - name: PATH
          list:
            - ${linter}
      include_lfs: true
      known_good_version: 7.0.0
      suggest_if: files_present
      version_command:
        parse_regex: ${semver}
        run: oxipng --version
    - name: perlcritic
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
            - 2
          formatter: false
          in_place: false
          name: lint
          parse_regex: (path=(?P<path>.*),line=(?P<line>.*),col=(?P<col>.*),code=(?P<code>.*),message=(?P<message>.*))
          read_output_from: stdout
          run: perlcritic --verbose 'path=%f,line=%l,col=%c,code=%p,message=%m\n' ${target}
      files:
        - perl
      autogenerated_definition_path: linters/perlcritic
      description: Static analysis tool for Perl
      direct_configs:
        - .perlcriticrc
      suggest_if: config_present
      supported_platforms:
        - linux
        - macos
    - name: perltidy
      commands:
        - output: rewrite
          success_codes:
            - 0
            - 1
          formatter: true
          name: format
          read_output_from: stdout
          run: perltidy -se ${target}
      files:
        - perl
      autogenerated_definition_path: linters/perltidy
      description: Formatter for Perl
      direct_configs:
        - .perltidyrc
      suggest_if: config_present
      supported_platforms:
        - linux
        - macos
    - name: php-cs-fixer
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          run: php-cs-fixer fix --using-cache=no --show-progress=none ${target}
      files:
        - php
      affects_cache:
        - .php-cs-fixer.php
      autogenerated_definition_path: linters/php-cs-fixer
      description: Keeps PHP code up to standards
      direct_configs:
        - .php-cs-fixer.dist.php
      known_good_version: 3.54.0
      suggest_if: config_present
      tools:
        - php-cs-fixer
    - name: phpstan
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          files:
            - php
          name: lint
          parser:
            run: python3 ${plugin}/linters/phpstan/phpstan_parser.py
            runtime: python
          read_output_from: stdout
          run: phpstan analyze "${target}" --error-format=json --level=9
      autogenerated_definition_path: linters/phpstan
      description: PHP Static Analysis Tool
      direct_configs:
        - phpstan.neon
        - phpstan.neon.dist
        - phpstan.dist.neon
      known_good_version: 1.10.58
      main_tool: phpstan
      suggest_if: never
    - name: pmd
      commands:
        - output: sarif
          success_codes:
            - 0
            - 4
          files:
            - apex
          name: lint-apex
          read_output_from: stdout
          run: pmd check -R rulesets/apex/quickstart.xml -f sarif -d ${target}
          version: ">=7.0.0"
        - output: sarif
          success_codes:
            - 0
            - 4
          files:
            - apex
          name: lint-apex
          platforms:
            - windows
          read_output_from: stdout
          run: pmd.bat -R rulesets/apex/quickstart.xml -f sarif -d ${target}
        - output: sarif
          success_codes:
            - 0
            - 4
          files:
            - apex
          name: lint-apex
          read_output_from: stdout
          run: run.sh pmd -R rulesets/apex/quickstart.xml -f sarif -d ${target}
        - output: sarif
          success_codes:
            - 0
            - 4
          files:
            - java
          name: lint-java
          read_output_from: stdout
          run: pmd check -R rulesets/java/quickstart.xml -f sarif -d ${target}
          version: ">=7.0.0"
        - output: sarif
          success_codes:
            - 0
            - 4
          files:
            - java
          name: lint-java
          platforms:
            - windows
          read_output_from: stdout
          run: pmd.bat -R rulesets/java/quickstart.xml -f sarif -d ${target}
        - output: sarif
          success_codes:
            - 0
            - 4
          files:
            - java
          name: lint-java
          read_output_from: stdout
          run: run.sh pmd -R rulesets/java/quickstart.xml -f sarif -d ${target}
      autogenerated_definition_path: linters/pmd
      description: Static code analysis for Java and Apex
      download: pmd
      environment:
        - name: PATH
          list:
            - ${env.PATH}
      known_bad_versions:
        - pmd_releases/7.0.0-rc4
        - pmd_releases/7.0.0-rc3
        - pmd_releases/7.0.0-rc2
        - pmd_releases/7.0.0-rc1
      known_good_version: 6.55.0
      runtime: java
      suggest_if: never
    - name: pragma-once
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: false
          formatter: true
          name: format
          platforms:
            - windows
          run: sh ${plugin}/linters/pragma-once/fix.sh ${target}
        - output: rewrite
          success_codes:
            - 0
          batch: false
          formatter: true
          name: format
          run: ${plugin}/linters/pragma-once/fix.sh ${target}
      files:
        - c-header
        - c++-header
      autogenerated_definition_path: linters/pragma-once
      description: Enforces "#pragma once" in header files
      suggest_if: never
    - name: pre-commit-hooks
      commands:
        - output: rewrite
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          formatter: true
          in_place: true
          name: end-of-file-fixer
          run: end-of-file-fixer ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          name: check-added-large-files
          read_output_from: stdout
          run: check-added-large-files ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - python
          name: check-ast
          read_output_from: stdout
          run: check-ast ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - python
          name: check-builtin-literals
          read_output_from: stdout
          run: check-builtin-literals ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          name: check-case-conflict
          read_output_from: stdout
          run: check-case-conflict ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - python
          name: check-docstring-first
          read_output_from: stdout
          run: check-docstring-first ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - json
          name: check-json
          read_output_from: stdout
          run: check-json ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          name: check-merge-conflict
          read_output_from: stdout
          run: check-merge-conflict ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          name: check-shebang-scripts-are-executable
          read_output_from: stderr
          run: check-shebang-scripts-are-executable ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          name: check-symlinks
          read_output_from: stderr
          run: check-symlinks ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - toml
          name: check-toml
          read_output_from: stderr
          run: check-toml ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          name: check-vcs-permalinks
          read_output_from: stderr
          run: check-vcs-permalinks ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - xml
          name: check-xml
          read_output_from: stderr
          run: check-xml ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - yaml
          name: check-yaml
          read_output_from: stderr
          run: check-yaml ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - python
          name: debug-statement-hook
          read_output_from: stderr
          run: debug-statement-hook ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          name: destroyed-symlinks
          read_output_from: stderr
          run: destroyed-symlinks ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          name: detect-private-key
          read_output_from: stderr
          run: detect-private-key ${target}
        - output: pass_fail
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          name: mixed-line-ending
          read_output_from: stdout
          run: mixed-line-ending --fix=no ${target}
        - output: rewrite
          success_codes:
            - 0
            - 1
          enabled: false
          files:
            - ALL
          formatter: true
          in_place: true
          name: trailing-whitespace
          run: mixed-line-ending --fix=no ${target}
      autogenerated_definition_path: linters/pre-commit-hooks
      description: A collection of pre-commit tools for Python
      environment:
        - name: PATH
          list:
            - ${env.PATH}
      known_good_version: 4.4.0
      package: pre-commit-hooks
      runtime: python
      suggest_if: never
    - name: prettier
      commands:
        - output: sarif
          success_codes:
            - 0
            - 2
          batch: true
          formatter: true
          in_place: true
          name: format
          parser:
            run: python3 ${plugin}/linters/prettier/prettier_to_sarif.py ${exit_code}
            runtime: python
          read_output_from: stderr
          run: prettier -w ${target}
      files:
        - typescript
        - yaml
        - css
        - postcss
        - sass
        - html
        - markdown
        - json
        - javascript
        - graphql
        - prettier_supported_configs
      affects_cache:
        - package.json
        - .editorconfig
      autogenerated_definition_path: linters/prettier
      description: A universal formatter
      direct_configs:
        - .prettierrc
        - .prettierrc.json
        - .prettierrc.yml
        - .prettierrc.yaml
        - .prettierrc.json5
        - .prettierrc.js
        - .prettierrc.cjs
        - .prettierrc.mjs
        - prettier.config.js
        - prettier.config.cjs
        - prettier.config.mjs
        - .prettierrc.toml
        - .prettierignore
      known_good_version: 2.6.2
      suggest_if: files_present
      tools:
        - prettier
      version_command:
        parse_regex: ${semver}
        run: prettier --version
    - name: prisma
      commands:
        - output: rewrite
          success_codes:
            - 0
          formatter: true
          in_place: true
          name: format
          platforms:
            - windows
          run: prisma.cmd format --schema=${target}
        - output: rewrite
          success_codes:
            - 0
          formatter: true
          in_place: true
          name: format
          run: prisma format --schema=${target}
      files:
        - prisma
      autogenerated_definition_path: linters/prisma
      description: A Prisma formatter
      known_good_version: 4.16.1
      suggest_if: never
      tools:
        - prisma
    - name: psscriptanalyzer
      commands:
        - output: sarif
          success_codes:
            - 0
          batch: false
          name: Invoke-ScriptAnalyzer
          read_output_from: tmp_file
          run: pwsh -f ${cwd}/lint.ps1 -FilePath ${target} -OutputPath ${tmpfile}
        - output: rewrite
          success_codes:
            - 0
          batch: false
          formatter: true
          in_place: true
          name: Invoke-Formatter
          run: pwsh -f ${cwd}/format.ps1 -FilePath ${target}
      files:
        - powershell
      autogenerated_definition_path: linters/psscriptanalyzer
      description: Linter for PowerShell scripts
      direct_configs:
        - PSScriptAnalyzerSettings.psd1
      main_tool: psscriptanalyzer
      suggest_if: config_present
      tools:
        - converttosarif
        - pwsh
      version_command:
        parse_regex: ${semver}
        run: "pwsh -c \"Import-Module -Name (Get-Command -Name \"PSScriptAnalyzer.psd1\").Source; (Get-Module -Name PSScriptAnalyzer).Version\"\n"
    - name: pylint
      commands:
        - output: pylint
          success_codes:
            - 0
          batch: true
          cache_results: true
          name: lint
          read_output_from: tmp_file
          run: pylint --exit-zero --output ${tmpfile} --output-format json ${target}
      files:
        - python
      affects_cache:
        - pyproject.toml
        - setup.cfg
      autogenerated_definition_path: linters/pylint
      description: Static code analysis for Python
      direct_configs:
        - pylintrc
        - .pylintrc
      issue_url_format: http://pylint-messages.wikidot.com/messages:{}
      known_good_version: 2.11.1
      suggest_if: config_present
      tools:
        - pylint
      version_command:
        parse_regex: pylint ${semver}
        run: pylint --version
    - name: pyright
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: false
          name: lint
          parser:
            run: python3 ${plugin}/linters/pyright/pyright_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: pyright --outputjson ${target}
      files:
        - python
      affects_cache:
        - pyproject.toml
        - setup.cfg
      autogenerated_definition_path: linters/pyright
      description: Static type checker for Python
      direct_configs:
        - pyrightconfig.json
      issue_url_format: https://github.com/microsoft/pyright/blob/main/docs/configuration.md#{}
      known_good_version: 1.1.304
      suggest_if: config_present
      tools:
        - pyright
      version_command:
        parse_regex: pyright ${semver}
        run: pyright --version
    - name: regal
      commands:
        - output: sarif
          success_codes:
            - 0
            - 3
          batch: true
          cache_results: true
          name: lint
          run: regal lint --format sarif ${target}
      files:
        - rego
      autogenerated_definition_path: linters/regal
      description: Linter for Rego files
      direct_configs:
        - .regal/config.yaml
      known_good_version: 0.18.0
      main_tool: regal
      suggest_if: config_present
    - name: remark-lint
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: fmt
          run: remark ${target} --output
        - output: sarif
          success_codes:
            - 0
            - 1
          cache_results: true
          name: lint
          parser:
            run: python3 ${cwd}/parse.py
            runtime: python
          read_output_from: stderr
          run: remark ${target} --frail --output --report=vfile-reporter-json
          sandbox_type: copy_targets
      files:
        - markdown
      autogenerated_definition_path: linters/remark-lint
      description: A markdown linter and formatter
      direct_configs:
        - .remarkrc
        - .remarkrc.json
        - .remarkrc.cjs
        - .remarkrc.mjs
        - .remarkrc.js
        - .remarkrc.yaml
        - .remarkrc.yml
      extra_packages:
        - remark-preset-lint-consistent
        - remark-preset-lint-recommended
        - remark-lint-list-item-indent
        - vfile-reporter-json
      known_good_version: 11.0.0
      package: remark-cli
      runtime: node
      suggest_if: config_present
      supported_platforms:
        - linux
        - macos
      symlinks:
        - from: ${linter_dir}/node_modules
          to: node_modules
    - name: renovate
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
          name: validate
          parser:
            run: python3 ${cwd}/parse.py
            runtime: python
          platforms:
            - windows
          read_output_from: stdout
          run: renovate-config-validator.cmd ${target}
        - output: sarif
          success_codes:
            - 0
            - 1
          name: validate
          parser:
            run: python3 ${cwd}/parse.py
            runtime: python
          read_output_from: stdout
          run: renovate-config-validator ${target}
      files:
        - renovate-config
      autogenerated_definition_path: linters/renovate
      description: Validates Renovate configuration files
      direct_configs:
        - renovate.json
        - renovate.json5
        - .github/renovate.json
        - .github/renovate.json5
        - .gitlab/renovate.json
        - .gitlab/renovate.json5
        - .renovaterc
        - .renovaterc.json
        - .renovaterc.json5
      known_good_version: 34.122.0
      suggest_if: config_present
      tools:
        - renovate
      version_command:
        parse_regex: ${semver}
        run: renovate --version
    - name: rome
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          name: check
          parse_regex: " *(?P<path>.*?):(?P<line>\\d+):(?P<col>\\d+) (?P<code>[^ ]+)(?:[^×]*\\n).*× (?P<message>.*)\\n"
          read_output_from: stderr
          run: rome check ${target}
        - output: rewrite
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: fmt
          run: rome format --write "${target}"
      files:
        - typescript
        - javascript
      affects_cache:
        - package.json
        - .editorconfig
      autogenerated_definition_path: linters/rome
      description: A static analyzer for web projects
      direct_configs:
        - rome.json
      known_good_version: 10.0.1
      suggest_if: never
      tools:
        - rome
      version_command:
        parse_regex: Rome CLI version ${semver}
        run: rome --version
    - name: rubocop
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
          batch: true
          name: lint
          parser:
            run: python3 ${plugin}/linters/rubocop/rubocop_to_sarif.py
            runtime: python
          run: rubocop --format json ${target}
        - output: rewrite
          success_codes:
            - 0
            - 1
          batch: true
          formatter: true
          in_place: true
          name: fix-layout
          run: rubocop --fix-layout ${target}
      files:
        - ruby
        - gemspec
      autogenerated_definition_path: linters/rubocop
      description: A Ruby static code analyzer and formatter
      direct_configs:
        - .rubocop.yml
      issue_url_format: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/{}
      known_good_version: 1.39.0
      package: rubocop
      runtime: ruby
      suggest_if: config_present
      version_command:
        parse_regex: ${semver}
        run: rubocop --version
    - name: rubocop-fmt
      type: rewrite
      files:
        - ruby
        - gemspec
      command:
        - rubocop
        - --fix-layout
        - ${target}
      success_codes:
        - 0
        - 1
      autogenerated_definition_path: linters/rubocop
      batch: true
      deprecated: rubocop-fmt is now handled by rubocop. Please delete rubocop-fmt from your config
      direct_configs:
        - .rubocop.yml
      formatter: true
      in_place: true
      known_good_version: 1.39.0
      package: rubocop
      runtime: ruby
      suggest_if: never
      version_command:
        parse_regex: ${semver}
        run: rubocop --version
    - name: ruff
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
          batch: true
          files:
            - python
            - python-interface
            - jupyter
          name: lint
          parser:
            run: python3 ${cwd}/ruff_to_sarif.py 0
            runtime: python
          run: ruff check --cache-dir ${cachedir} --output-format json ${target}
          version: ">=0.6.0"
        - output: sarif
          success_codes:
            - 0
            - 1
          batch: true
          files:
            - python
            - python-interface
          name: lint
          parser:
            run: python3 ${cwd}/ruff_to_sarif.py 0
            runtime: python
          run: ruff check --cache-dir ${cachedir} --output-format json ${target}
          version: ">=0.1.0"
        - output: sarif
          success_codes:
            - 0
            - 1
          batch: true
          files:
            - python
            - python-interface
          name: lint
          parser:
            run: python3 ${cwd}/ruff_to_sarif.py 0
            runtime: python
          run: ruff check --cache-dir ${cachedir} --format json ${target}
          version: ">=0.0.266"
        - output: sarif
          success_codes:
            - 0
            - 1
          batch: true
          files:
            - python
            - python-interface
          name: lint
          parser:
            run: python3 ${cwd}/ruff_to_sarif.py 1
            runtime: python
          run: ruff check --cache-dir ${cachedir} --format json ${target}
        - output: rewrite
          success_codes:
            - 0
          allow_empty_files: false
          batch: true
          cache_results: true
          enabled: false
          files:
            - python
            - python-interface
          formatter: true
          in_place: true
          name: format
          run: ruff format ${target}
      affects_cache:
        - pyproject.toml
        - setup.cfg
        - tox.ini
      autogenerated_definition_path: linters/ruff
      description: A Python linter and formatter
      direct_configs:
        - ruff.toml
      issue_url_format: https://docs.astral.sh/ruff/rules/#{}
      known_good_version: 0.2.1
      suggest_if: files_present
      tools:
        - ruff
      version_command:
        parse_regex: ruff ${semver}
        run: ruff --version
    - name: ruff-nbqa
      commands:
        - output: pass_fail
          success_codes:
            - 0
            - 1
          batch: true
          name: lint
          run: nbqa 'ruff check --cache-dir=${cachedir} --quiet' ${target}
      files:
        - jupyter
      affects_cache:
        - pyproject.toml
        - setup.cfg
        - tox.ini
      autogenerated_definition_path: linters/ruff
      description: A Python linter for Jupyter notebooks
      direct_configs:
        - ruff.toml
      extra_packages:
        - nbqa==1.8.5
      known_good_version: 0.0.250
      package: ruff
      runtime: python
      suggest_if: never
      version_command:
        parse_regex: ruff ${semver}
        run: ruff --version
    - name: rufo
      commands:
        - output: rewrite
          success_codes:
            - 0
            - 3
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: rufo ${target}
      files:
        - ruby
      autogenerated_definition_path: linters/rufo
      description: A Ruby formatter
      direct_configs:
        - .rufo
      known_good_version: 0.13.0
      suggest_if: config_present
      tools:
        - rufo
      version_command:
        parse_regex: ${semver}
        run: rufo --version
    - name: rustfmt
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          run: rustfmt ${target}
      files:
        - rust
      affects_cache:
        - Cargo.toml
        - Cargo.lock
      autogenerated_definition_path: linters/rustfmt
      description: A Rust formatter
      direct_configs:
        - rustfmt.toml
        - .rustfmt.toml
      download: rust
      environment:
        - name: PATH
          list:
            - ${linter}/bin
      known_good_version: 1.65.0
      suggest_if: files_present
      version_command:
        parse_regex: ${semver}
        run: rustfmt --version
    - name: scalafmt
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: scalafmt ${target}
          run_from: ${root_or_parent_with(.scalafmt.conf)}
      files:
        - scala
      autogenerated_definition_path: linters/scalafmt
      description: A Scala formatter
      direct_configs:
        - .scalafmt.conf
      environment:
        - name: PATH
          list:
            - ${linter}
      known_bad_versions:
        - 3.8.4-RC1
      known_good_version: 3.4.3
      suggest_if: config_present
      tools:
        - scalafmt
      version_command:
        parse_regex: scalafmt ${semver}
        run: scalafmt --version
    - name: semgrep
      commands:
        - output: sarif
          success_codes:
            - 0
          batch: true
          cache_results: true
          name: check
          read_output_from: tmp_file
          run: semgrep --config=auto --sarif --output=${tmpfile} --include=${target}
          sandbox_type: copy_targets
      files:
        - ALL
      affects_cache:
        - .semgrepignore
        - .semgrep
      autogenerated_definition_path: linters/semgrep
      description: Find bugs and enforce code standards
      direct_configs:
        - .semgrep.yaml
        - .semgrep.yml
      environment:
        - name: PATH
          list:
            - ${env.PATH}
      known_bad_versions:
        - 1.5.1
      known_good_version: 1.33.2
      suggest_if: config_present
      supported_platforms:
        - linux
        - macos
      tools:
        - semgrep
      version_command:
        parse_regex: ${semver}
        run: semgrep --version
    - name: shellcheck
      commands:
        - output: shellcheck
          error_codes:
            - 2
          name: lint
          run: shellcheck ${target} -f json --external-sources
          sandbox_type: copy_targets
      files:
        - shell
      autogenerated_definition_path: linters/shellcheck
      cache_results: false
      description: Finds bugs in your shell scripts
      direct_configs:
        - .shellcheckrc
        - shellcheckrc
      environment:
        - name: PATH
          list:
            - ${linter}
      issue_url_format: https://github.com/koalaman/shellcheck/wiki/{}
      known_good_version: 0.8.0
      suggest_if: files_present
      tools:
        - shellcheck
      version_command:
        parse_regex: ${semver}
        run: shellcheck --version
    - name: shfmt
      commands:
        - output: shfmt
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: shfmt -w -s ${target}
      files:
        - shell
      affects_cache:
        - .editorconfig
      autogenerated_definition_path: linters/shfmt
      description: A shell formatter
      known_good_version: 3.6.0
      suggest_if: files_present
      tools:
        - shfmt
      version_command:
        parse_regex: ${semver}
        run: shfmt --version
    - name: sort-package-json
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          run: sort-package-json ${target}
      files:
        - package-json
      autogenerated_definition_path: linters/sort-package-json
      description: Sorts package.json keys
      known_good_version: 2.1.0
      path_format: generic
      suggest_if: never
      tools:
        - sort-package-json
    - name: sourcery
      commands:
        - output: regex
          success_codes:
            - 0
          batch: true
          cache_results: true
          name: lint
          parse_regex: ((?P<path>.*),(?P<line>\d+),(?P<code>.*),(?P<message>.*))
          platforms:
            - linux
            - macos
          read_output_from: stdout
          run: bash -c "ln -s ${REPO_DIR}/.git .git; sourcery review  --no-summary --csv ${target}"
        - output: rewrite
          success_codes:
            - 0
          batch: true
          in_place: true
          name: fix
          platforms:
            - linux
            - macos
          run: bash -c "ln -s ${REPO_DIR}/.git .git || true; sourcery review  --no-summary --csv --fix ${target}"
      files:
        - python
      affects_cache:
        - pyproject.toml
        - setup.cfg
      autogenerated_definition_path: linters/sourcery
      description: Static analyzer for Python
      direct_configs:
        - .sourcery.yaml
        - sourcery.yaml
      environment:
        - name: PATH
          list:
            - ${linter}
            - ${env.PATH}
        - name: REPO_DIR
          value: ${workspace}
      issue_url_format: https://docs.sourcery.ai/Reference/Python/Default-Rules/{}
      known_good_version: 1.2.0
      suggest_if: never
      tools:
        - sourcery
      version_command:
        parse_regex: sourcery ${semver}
        run: sourcery --version
    - name: sql-formatter
      commands:
        - output: rewrite
          success_codes:
            - 0
          formatter: true
          name: lint
          run: sql-formatter
          std_in: true
      files:
        - sql
      autogenerated_definition_path: linters/sql-formatter
      description: A SQL formatter
      known_good_version: 7.0.1
      suggest_if: never
      tools:
        - sql-formatter
      version_command:
        parse_regex: ${semver}
        run: sql-formatter --version
    - name: sqlfluff
      commands:
        - output: sarif
          success_codes:
            - 0
          name: lint
          parser:
            run: python3 ${plugin}/linters/sqlfluff/sqlfluff_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: sqlfluff lint ${target} --format json --nofail
        - output: rewrite
          success_codes:
            - 0
            - 1
          batch: true
          enabled: false
          formatter: true
          in_place: true
          name: fix
          run: sqlfluff fix ${target} --disable-progress-bar
          version: ">=3.0.0"
        - output: rewrite
          success_codes:
            - 0
            - 1
          batch: true
          enabled: false
          formatter: true
          in_place: true
          name: fix
          run: sqlfluff fix ${target} --disable-progress-bar --force
      files:
        - sql
        - sql-j2
        - dml
        - ddl
      affects_cache:
        - pyproject.toml
      autogenerated_definition_path: linters/sqlfluff
      description: A dialect-flexible and configurable SQL linter
      direct_configs:
        - .sqlfluff
      known_good_version: 1.4.5
      suggest_if: config_present
      tools:
        - sqlfluff
    - name: sqlfmt
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          read_output_from: stderr
          run: sqlfmt ${target}
      files:
        - sql
        - sql-j2
      autogenerated_definition_path: linters/sqlfmt
      description: A SQL formatter
      extra_packages:
        - shandy-sqlfmt[jinjafmt]
      known_good_version: 0.16.0
      suggest_if: never
      tools:
        - sqlfmt
    - name: squawk
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          name: lint
          parse_regex: "(?P<path>.*):(?P<line>\\d+):(?P<col>\\d+): (?P<severity>\\S*) (?P<code>\\S*) (?P<message>.*)"
          platforms:
            - windows
          run: ${linter}/node_modules/squawk-cli/js/binaries/squawk --reporter Gcc ${target}
        - output: regex
          success_codes:
            - 0
            - 1
          batch: true
          cache_results: true
          name: lint
          parse_regex: "(?P<path>.*):(?P<line>\\d+):(?P<col>\\d+): (?P<severity>\\S*) (?P<code>\\S*) (?P<message>.*)"
          run: squawk --reporter Gcc ${target}
      files:
        - sql
      autogenerated_definition_path: linters/squawk
      description: A linter for Postgres migrations
      direct_configs:
        - .squawk.toml
      known_good_version: 1.4.0
      suggest_if: config_present
      tools:
        - squawk
    - name: standardrb
      commands:
        - output: rubocop
          success_codes:
            - 0
            - 1
          batch: true
          name: lint
          run: standardrb ${target} --format json
        - output: rewrite
          success_codes:
            - 0
            - 1
          batch: true
          formatter: true
          in_place: true
          name: fix
          run: standardrb ${target} --fix
      files:
        - ruby
        - gemspec
      autogenerated_definition_path: linters/standardrb
      description: Ruby's bikeshed-proof linter and formatter
      direct_configs:
        - .standard.yml
      issue_url_format: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/{}
      known_good_version: 1.3.0
      suggest_if: config_present
      tools:
        - standardrb
      version_command:
        parse_regex: ${semver}
        run: standardrb --version
    - name: stringslint
      commands:
        - output: regex
          success_codes:
            - 0
          batch: true
          cache_results: true
          name: lint
          parse_regex: "(?P<path>.*?):(?P<line>\\d+): (?P<severity>.*?): (?P<message>.*) \\((?P<code>.*?)\\)"
          run: stringslint lint ${target}
      files:
        - swift
        - objective-c-source
        - strings
        - xib
        - storyboard
      autogenerated_definition_path: linters/stringslint
      description: Ensures localized strings are complete and never unused
      direct_configs:
        - .stringslint.yml
        - .stringslint.yaml
        - .stringslint
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 0.1.1
      suggest_if: config_present
      tools:
        - stringslint
      version_command:
        parse_regex: ${semver}
        run: swiftlint --version
    - name: stylelint
      commands:
        - output: stylelint
          success_codes:
            - 0
            - 2
          name: lint
          read_output_from: stderr
          run: stylelint -f json ${target}
          version: ">=16.0.0"
        - output: stylelint
          success_codes:
            - 0
            - 2
          name: lint
          run: stylelint -f json ${target}
        - output: rewrite
          success_codes:
            - 0
            - 2
          formatter: true
          in_place: true
          name: fix
          run: stylelint --fix ${target}
      files:
        - css
        - sass
      affects_cache:
        - package.json
        - .stylelintignore
      autogenerated_definition_path: linters/stylelint
      description: Over 100 built-in rules for modern CSS
      direct_configs:
        - stylelint.config.js
        - .stylelintrc.js
        - stylelint.config.mjs
        - .stylelintrc.mjs
        - stylelint.config.cjs
        - .stylelintrc.cjs
        - .stylelintrc.json
        - .stylelintrc.yml
        - .stylelintrc.yaml
        - .stylelintrc
      known_good_version: 14.6.1
      suggest_if: config_present
      tools:
        - stylelint
      version_command:
        parse_regex: ${semver}
        run: stylelint --version
    - name: stylelint-fmt
      type: rewrite
      files:
        - css
        - sass
      command:
        - stylelint
        - --fix
        - ${target}
      success_codes:
        - 0
        - 2
      affects_cache:
        - package.json
        - .stylelintignore
      autogenerated_definition_path: linters/stylelint
      deprecated: "'stylelint-fmt' is now handled by 'stylelint'. Please delete 'stylelint-fmt' from your config"
      direct_configs:
        - .stylelintrc
        - .stylelintrc.json
        - .stylelintrc.yml
        - .stylelintrc.yaml
        - .stylelintrc.js
        - .stylelintrc.cjs
      formatter: true
      in_place: true
      known_good_version: 14.6.1
      package: stylelint
      runtime: node
      suggest_if: never
      version_command:
        parse_regex: ${semver}
        run: stylelint --version
    - name: stylua
      commands:
        - output: rewrite
          success_codes:
            - 0
            - 1
          formatter: true
          name: format
          run: stylua --verify --search-parent-directories --stdin-filepath ${target} -
          std_in: true
      files:
        - lua
      autogenerated_definition_path: linters/stylua
      description: An opinionated Lua formatter
      direct_configs:
        - stylua.toml
        - .stylua.toml
      known_good_version: 0.17.0
      suggest_if: config_present
      tools:
        - stylua
      version_command:
        parse_regex: ${semver}
        run: stylua --version
    - name: svgo
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          fix_prompt: Unoptimized svg
          fix_verb: fix
          formatter: true
          in_place: true
          name: fmt
          run: svgo --multipass ${target}
      files:
        - svg
      autogenerated_definition_path: linters/svgo
      description: Optimize SVG files
      direct_configs:
        - svgo.config.js
        - svgo.config.mjs
        - svgo.config.cjs
      include_lfs: true
      known_good_version: 2.8.0
      suggest_if: files_present
      tools:
        - svgo
      version_command:
        parse_regex: ${semver}
        run: svgo --version
    - name: swiftformat
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: swiftformat "${target}"
      files:
        - swift
      affects_cache:
        - .swift-version
      autogenerated_definition_path: linters/swiftformat
      description: Formatter for Swift
      direct_configs:
        - .swiftformat
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 0.50.0
      suggest_if: config_present
      tools:
        - swiftformat
      version_command:
        parse_regex: ${semver}
        run: swiftformat --version
    - name: swiftlint
      commands:
        - output: regex
          success_codes:
            - 0
            - 2
          batch: true
          cache_results: true
          name: lint
          parse_regex: "(?P<path>.*?):(?P<line>\\d+):(?P<col>\\d+): (?P<severity>.*?): (?P<message>.*) \\((?P<code>.*?)\\)"
          run: swiftlint --quiet ${target}
      files:
        - swift
      autogenerated_definition_path: linters/swiftlint
      description: Enforces Swift style and conventions
      direct_configs:
        - .swiftlint.yml
        - .swiftlint.yaml
        - .swiftlint
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 0.49.1
      suggest_if: config_present
      tools:
        - swiftlint
      version_command:
        parse_regex: ${semver}
        run: swiftlint --version
    - name: taplo
      commands:
        - output: taplo
          success_codes:
            - 0
            - 1
          name: lint
          run: taplo lint ${target}
        - output: rewrite
          success_codes:
            - 0
          formatter: true
          in_place: true
          name: format
          run: taplo format ${target}
      files:
        - toml
      autogenerated_definition_path: linters/taplo
      cache_results: true
      description: Validate and format TOML files
      direct_configs:
        - .taplo.toml
        - taplo.toml
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 0.8.0
      suggest_if: files_present
      tools:
        - taplo
      version_command:
        parse_regex: Taplo TOML Utility ${semver}
        run: taplo --version
    - name: taplo-fmt
      type: rewrite
      files:
        - toml
      command:
        - taplo
        - format
        - ${target}
      success_codes:
        - 0
      autogenerated_definition_path: linters/taplo
      cache_results: true
      deprecated: "'taplo-fmt' is now handled by 'taplo'. Please delete 'taplo-fmt' from your config"
      direct_configs:
        - .taplo.toml
        - taplo.toml
      download: taplo
      environment:
        - name: PATH
          list:
            - ${linter}
      formatter: true
      in_place: true
      known_good_version: 0.8.0
      suggest_if: never
      version_command:
        parse_regex: Taplo TOML Utility ${semver}
        run: taplo --version
    - name: terraform
      commands:
        - output: terraform_validate
          success_codes:
            - 0
            - 1
          enabled: false
          name: validate
          run: terraform validate -json
          run_from: ${target_directory}
          target: ${parent}
        - output: rewrite
          success_codes:
            - 0
          cache_results: true
          formatter: true
          name: fmt
          run: terraform fmt -no-color -
          std_in: true
      files:
        - terraform
        - tfvars
      autogenerated_definition_path: linters/terraform
      description: Validate and format terraform files
      environment:
        - name: PATH
          list:
            - ${linter}
        - name: GITHUB_APP_ID
          optional: true
          value: ${env.GITHUB_APP_ID}
        - name: GITHUB_APP_INSTALLATION_ID
          optional: true
          value: ${env.GITHUB_APP_INSTALLATION_ID}
        - name: GITHUB_APP_PEM_FILE
          optional: true
          value: ${env.GITHUB_APP_PEM_FILE}
      known_good_version: 1.1.0
      suggest_if: never
      tools:
        - terraform
      version_command:
        parse_regex: ${semver}
        run: terraform --version
    - name: terraform-fmt
      type: rewrite
      files:
        - terraform
      command:
        - terraform
        - fmt
        - -no-color
        - "-"
      success_codes:
        - 0
      autogenerated_definition_path: linters/terraform
      cache_results: true
      deprecated: terraform-fmt is now handled by terraform. Please delete terraform-fmt from your config
      download: terraform
      environment:
        - name: PATH
          list:
            - ${linter}
      formatter: true
      known_good_version: 1.1.0
      std_in: true
      suggest_if: never
      version_command:
        parse_regex: ${semver}
        run: terraform --version
    - name: terraform-validate
      type: terraform_validate
      files:
        - terraform
      command:
        - terraform
        - validate
        - -json
      success_codes:
        - 0
        - 1
      autogenerated_definition_path: linters/terraform
      deprecated: terraform-validate is now handled by terraform. Please delete terraform-validate from your config
      download: terraform
      environment:
        - name: PATH
          list:
            - ${linter}
        - name: GITHUB_APP_ID
          optional: true
          value: ${env.GITHUB_APP_ID}
        - name: GITHUB_APP_INSTALLATION_ID
          optional: true
          value: ${env.GITHUB_APP_INSTALLATION_ID}
        - name: GITHUB_APP_PEM_FILE
          optional: true
          value: ${env.GITHUB_APP_PEM_FILE}
      known_good_version: 1.1.0
      suggest_if: never
      version_command:
        parse_regex: ${semver}
        run: terraform --version
    - name: terragrunt
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          run: terragrunt hclfmt ${target}
          sandbox_type: copy_targets
      files:
        - hcl
      autogenerated_definition_path: linters/terragrunt
      description: Maintain HCL files in a canonical format
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 0.45.8
      suggest_if: never
      tools:
        - terragrunt
      version_command:
        parse_regex: terragrunt v${semver}
        run: terragrunt -version
    - name: terrascan
      commands:
        - output: sarif
          success_codes:
            - 0
            - 3
            - 4
            - 5
          files:
            - terraform
          is_security: true
          name: lint
          parser:
            run: python3 ${plugin}/linters/terrascan/sarif_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: terrascan scan -i terraform --iac-file ${target} --output sarif
        - output: sarif
          success_codes:
            - 0
            - 3
            - 4
            - 5
          files:
            - docker
          is_security: true
          name: lint-docker
          parser:
            run: python3 ${plugin}/linters/terrascan/sarif_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: terrascan scan -i docker --iac-file ${target} --output sarif
      autogenerated_definition_path: linters/terrascan
      description: A static code analyzer for IaC
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 1.18.1
      suggest_if: never
      tools:
        - terrascan
      version_command:
        parse_regex: "version: v${semver}"
        run: terrascan version
    - name: tflint
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
            - 2
          name: lint
          prepare_run: tflint --init
          read_output_from: stdout
          run: tflint --format=sarif --force
          run_from: ${target_directory}
          sandbox_type: expanded
          target: ${parent}
          version: ">=0.47.0"
        - output: sarif
          success_codes:
            - 0
            - 1
          name: lint
          prepare_run: tflint --init
          read_output_from: stdout
          run: tflint --format=sarif ${target} --force
          run_from: ${root_or_parent_with(.tflint.hcl)}
      files:
        - terraform
      autogenerated_definition_path: linters/tflint
      description: A pluggable Terraform linter
      direct_configs:
        - .tflint.hcl
      environment:
        - name: PATH
          list:
            - ${linter}
        - name: TFLINT_PLUGIN_DIR
          value: ${shared_cachedir}
        - name: GITHUB_TOKEN
          optional: true
          value: ${env.GITHUB_TOKEN}
      known_good_version: 0.47.0
      suggest_if: files_present
      tools:
        - tflint
      version_command:
        parse_regex: ${semver}
        run: tflint --version
    - name: tfsec
      commands:
        - output: sarif
          success_codes:
            - 0
            - 1
          is_security: true
          name: lint
          parser:
            run: python3 ${cwd}/parse.py
            runtime: python
          read_output_from: stdout
          run: tfsec ${target} --format=sarif --ignore-hcl-errors
          run_from: ${target_directory}
          target: ${parent}
      files:
        - terraform
      autogenerated_definition_path: linters/tfsec
      description: Security scanner for your Terraform code
      direct_configs:
        - tfsec.yml
        - tfsec.yaml
        - .tfsec/config.json
        - .tfsec/config.yml
        - .tfsec/config.yaml
      environment:
        - name: PATH
          list:
            - ${linter}
      known_good_version: 1.28.1
      suggest_if: never
      tools:
        - tfsec
      version_command:
        parse_regex: v${semver}
        run: tfsec --version
    - name: tofu
      commands:
        - output: terraform_validate
          success_codes:
            - 0
            - 1
          enabled: false
          name: validate
          run: tofu validate -json
          run_from: ${target_directory}
          target: ${parent}
        - output: rewrite
          success_codes:
            - 0
          cache_results: true
          formatter: true
          name: fmt
          run: tofu fmt -no-color -
          std_in: true
      files:
        - terraform
        - tfvars
      autogenerated_definition_path: linters/tofu
      description: A Terraform validator and formatter
      environment:
        - name: PATH
          list:
            - ${linter}
        - name: GITHUB_APP_ID
          optional: true
          value: ${env.GITHUB_APP_ID}
        - name: GITHUB_APP_INSTALLATION_ID
          optional: true
          value: ${env.GITHUB_APP_INSTALLATION_ID}
        - name: GITHUB_APP_PEM_FILE
          optional: true
          value: ${env.GITHUB_APP_PEM_FILE}
      known_good_version: 1.6.2
      suggest_if: never
      tools:
        - tofu
      version_command:
        parse_regex: ${semver}
        run: tofu --version
    - name: trivy
      commands:
        - output: sarif
          success_codes:
            - 0
          batch: false
          enabled: false
          files:
            - lockfile
          is_security: true
          name: fs-vuln
          parser:
            run: python3 ${plugin}/linters/trivy/trivy_fs_vuln_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: trivy fs ${target} --scanners vuln --format json --no-progress --cache-dir ${shared_cachedir}
        - output: sarif
          success_codes:
            - 0
          batch: false
          enabled: false
          files:
            - ALL
          is_security: true
          name: fs-secret
          parser:
            run: python3 ${plugin}/linters/trivy/trivy_fs_secret_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: trivy fs ${target} --scanners secret --format json --no-progress --cache-dir ${shared_cachedir}
        - output: sarif
          success_codes:
            - 0
          batch: false
          files:
            - docker
            - yaml
            - terraform
          is_security: true
          name: config
          parser:
            run: python3 ${plugin}/linters/trivy/trivy_config_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: trivy config ${target} --format json --cache-dir ${shared_cachedir}
      autogenerated_definition_path: linters/trivy
      description: A comprehensive and versatile security scanner
      direct_configs:
        - trivy.yaml
        - .trivyignore
        - .trivyignore.yaml
        - trivy-secret.yaml
      environment:
        - name: PATH
          list:
            - ${linter}
            - ${env.PATH}
        - name: USER
          optional: true
          value: ${env.USER}
      known_good_version: 0.44.1
      suggest_if: config_present
      tools:
        - trivy
      version_command:
        parse_regex: Version ${semver}
        run: trivy --version
    - name: trufflehog
      commands:
        - output: sarif
          success_codes:
            - 0
            - 183
          batch: true
          cache_results: true
          cache_ttl: 1h
          is_security: true
          name: lint
          parser:
            run: python3 ${plugin}/linters/trufflehog/trufflehog_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: trufflehog filesystem --json --fail --only-verified --no-update ${target}
          sandbox_type: copy_targets
      files:
        - ALL
      autogenerated_definition_path: linters/trufflehog
      description: Validated and versatile secrets scanner
      environment:
        - name: PATH
          list:
            - ${linter}
      known_bad_versions:
        - 3.41.0
        - 3.45.0
        - 3.60.1
        - 3.60.2
      known_good_version: 3.59.0
      suggest_if: files_present
      tools:
        - trufflehog
      version_command:
        parse_regex: trufflehog ${semver}
        run: trufflehog --version
    - name: trufflehog-git
      commands:
        - output: sarif
          success_codes:
            - 0
            - 183
          cache_results: false
          disable_upstream: true
          is_security: true
          name: lint
          parser:
            run: python3 ${plugin}/linters/trufflehog/trufflehog_to_sarif.py
            runtime: python
          read_output_from: stdout
          run: trufflehog git --json --fail --only-verified --no-update file://${target} --since-commit ${upstream-ref}
          target: .
      files:
        - ALL
      autogenerated_definition_path: linters/trufflehog
      description: Scan git history for secrets
      download: trufflehog
      environment:
        - name: PATH
          list:
            - ${linter}
            - ${env.PATH}
      hold_the_line: false
      known_bad_versions:
        - 3.41.0
        - 3.60.1
        - 3.60.2
      known_good_version: 3.59.0
      suggest_if: never
      version_command:
        parse_regex: trufflehog ${semver}
        run: trufflehog --version
    - name: trunk-toolbox
      commands:
        - output: sarif
          success_codes:
            - 0
          batch: true
          cache_results: true
          direct_configs:
            - toolbox.toml
          disable_upstream: false
          max_concurrency: 1
          name: lint
          read_output_from: tmp_file
          run: trunk-toolbox --upstream=${upstream-ref} --cache-dir=${cachedir} --results=${tmpfile} ${target}
          version: ">=0.5.3"
        - output: sarif
          success_codes:
            - 0
          batch: true
          direct_configs:
            - toolbox.toml
          disable_upstream: true
          max_concurrency: 1
          name: lint
          read_output_from: tmp_file
          run: trunk-toolbox --upstream=${upstream-ref} --cache-dir=${cachedir} --results=${tmpfile} ${target}
          version: ">=0.4.1"
        - output: sarif
          success_codes:
            - 0
          batch: true
          disable_upstream: true
          name: lint
          read_output_from: tmp_file
          run: trunk-toolbox --upstream=${upstream-ref} --results=${tmpfile} ${target}
      files:
        - ALL
      affects_cache:
        - toolbox.toml
        - log4rs.yaml
      autogenerated_definition_path: linters/trunk-toolbox
      description: Repository level linting tools
      main_tool: trunk-toolbox
      suggest_if: never
      version_command:
        parse_regex: ${semver}
        run: trunk-toolbox --version
    - name: txtpbfmt
      commands:
        - output: rewrite
          success_codes:
            - 0
          batch: true
          formatter: true
          in_place: true
          name: format
          run: txtpbfmt ${target}
      files:
        - textproto
      autogenerated_definition_path: linters/txtpbfmt
      description: A formatter for textproto files
      known_good_version: 0.0.0-20230412060525-fa9f017c0ded
      suggest_if: files_present
      tools:
        - txtpbfmt
    - name: vale
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
          batch: true
          name: lint
          parse_regex: (?P<path>.*):(?P<line>\d+):(?P<col>\d+):(?P<severity>[^:]+):(?P<message>.+)
          read_output_from: stdout
          run: vale --output=line ${target}
      files:
        - ALL
      autogenerated_definition_path: linters/vale
      description: Enforce editorial standards in your text documents
      direct_configs:
        - .vale.ini
      known_good_version: 3.4.1
      suggest_if: config_present
      tools:
        - vale
    - name: yamllint
      commands:
        - output: regex
          success_codes:
            - 0
            - 1
            - 2
          name: lint
          parse_regex: "((?P<path>.*):(?P<line>\\d+):(?P<col>\\d+): \\[(?P<severity>.*)\\] (?P<message>.*) \\((?P<code>.*)\\))"
          read_output_from: stdout
          run: yamllint -f parsable ${target}
      files:
        - yaml
      autogenerated_definition_path: linters/yamllint
      batch: true
      description: Validate, Verify and Reformat your YAML documents
      direct_configs:
        - .yamllint
        - .yamllint.yaml
        - .yamllint.yml
      issue_url_format: https://yamllint.readthedocs.io/en/stable/rules.html
      known_good_version: 1.26.3
      suggest_if: files_present
      tools:
        - yamllint
      version_command:
        parse_regex: ${semver}
        run: yamllint --version
    - name: yapf
      commands:
        - output: rewrite
          success_codes:
            - 0
          allow_empty_files: false
          batch: true
          cache_results: true
          formatter: true
          in_place: true
          name: format
          run: yapf --in-place ${target}
      files:
        - python
      affects_cache:
        - setup.cfg
        - pyproject.toml
      autogenerated_definition_path: linters/yapf
      description: A formatter for Python files
      direct_configs:
        - .style.yapf
        - .yapfignore
      known_good_version: 0.32.0
      suggest_if: config_present
      tools:
        - yapf
      version_command:
        parse_regex: yapf ${semver}
        run: yapf --version
  ignore:
    - linters:
        - ALL
      paths:
        - "**/trunk"
    - linters:
        - ALL
      paths:
        - "**/.terraform.lock.hcl"
        - "**/*gradle.lockfile"
        - "**/Berksfile.lock"
        - "**/Cargo.lock"
        - "**/Gemfile.lock"
        - "**/go.sum"
        - "**/package-lock.json"
        - "**/pnpm-lock.yaml"
        - "**/requirements.lock"
        - "**/vendor/**"
        - "**/yarn.lock"
      security: false
    - linters:
        - eslint
      paths:
        - "**/svgo.config.*js"
    - linters:
        - osv-scanner
      paths:
        - "**/go.sum"
  skip_missing_compile_command: false
tools:
  definitions:
    - autogenerated_definition_path: linters/yamllint
      known_good_version: 1.26.3
      name: yamllint
      package: yamllint
      runtime: python
      shims:
        - name: yamllint
          target: yamllint
    - autogenerated_definition_path: linters/trivy
      download: trivy
      known_good_version: 0.44.1
      name: trivy
      shims:
        - name: trivy
          target: trivy
    - autogenerated_definition_path: linters/buildifier
      download: buildifier
      known_good_version: 6.1.0
      name: buildifier
      shims:
        - name: buildifier
          target: buildifier
    - autogenerated_definition_path: linters/sql-formatter
      known_good_version: 7.0.1
      name: sql-formatter
      package: sql-formatter
      runtime: node
      shims:
        - name: sql-formatter
          target: sql-formatter
    - autogenerated_definition_path: linters/sqlfmt
      known_good_version: 0.16.0
      name: sqlfmt
      package: shandy-sqlfmt
      runtime: python
      shims:
        - name: sqlfmt
          target: sqlfmt
    - autogenerated_definition_path: linters/swiftlint
      download: swiftlint
      known_good_version: 0.49.1
      name: swiftlint
      shims:
        - name: swiftlint
          target: swiftlint
    - autogenerated_definition_path: linters/gokart
      known_good_version: 0.5.1
      name: gokart
      package: github.com/praetorian-inc/gokart
      runtime: go
      shims:
        - name: gokart
          target: gokart
    - autogenerated_definition_path: linters/black
      known_good_version: 22.3.0
      name: black
      package: black[python2,jupyter]
      runtime: python
      shims:
        - name: black
          target: black
    - autogenerated_definition_path: linters/gitleaks
      known_good_version: 8.8.7
      name: gitleaks
      package: github.com/zricethezav/gitleaks/v${major_version}
      runtime: go
      shims:
        - name: gitleaks
          target: gitleaks
    - autogenerated_definition_path: linters/graphql-schema-linter
      known_good_version: 3.0.1
      name: graphql-schema-linter
      package: graphql-schema-linter
      runtime: node
      shims:
        - name: graphql-schema-linter
          target: graphql-schema-linter
    - autogenerated_definition_path: linters/stringslint
      download: stringslint
      known_good_version: 0.1.1
      name: stringslint
      shims:
        - name: stringslint
          target: stringslint
    - autogenerated_definition_path: linters/scalafmt
      download: scalafmt
      known_good_version: 3.4.3
      name: scalafmt
      shims:
        - name: scalafmt
          target: scalafmt
    - autogenerated_definition_path: linters/squawk
      known_good_version: 1.4.0
      name: squawk
      package: squawk-cli
      runtime: node
      shims:
        - name: squawk
          target: squawk
    - autogenerated_definition_path: linters/rome
      known_good_version: 10.0.1
      name: rome
      package: rome
      runtime: node
      shims:
        - name: rome
          target: rome
    - autogenerated_definition_path: linters/cmake-format
      known_good_version: 0.6.13
      name: cmake-format
      package: cmake-format
      runtime: python
      shims:
        - name: cmake-format
          target: cmake-format
    - autogenerated_definition_path: linters/checkov
      known_good_version: 2.3.75
      name: checkov
      package: checkov
      runtime: python
      shims:
        - name: checkov
          target: checkov
    - autogenerated_definition_path: linters/eslint
      known_good_version: 8.10.0
      name: eslint
      package: eslint
      runtime: node
      shims:
        - name: eslint
          target: eslint
    - autogenerated_definition_path: linters/haml-lint
      known_good_version: 0.40.0
      name: haml-lint
      package: haml_lint
      runtime: ruby
      shims:
        - name: haml-lint
          target: haml-lint
    - autogenerated_definition_path: linters/goimports
      known_good_version: 0.9.1
      name: goimports
      package: golang.org/x/tools/cmd/goimports
      runtime: go
      shims:
        - name: goimports
          target: goimports
    - autogenerated_definition_path: linters/markdown-link-check
      known_good_version: 3.11.2
      name: markdown-link-check
      package: markdown-link-check
      runtime: node
      shims:
        - name: markdown-link-check
          target: markdown-link-check
    - autogenerated_definition_path: linters/pyright
      known_good_version: 1.1.304
      name: pyright
      package: pyright
      runtime: node
      shims:
        - name: pyright
          target: pyright
    - autogenerated_definition_path: linters/shellcheck
      download: shellcheck
      known_good_version: 0.8.0
      name: shellcheck
      shims:
        - name: shellcheck
          target: shellcheck
    - autogenerated_definition_path: linters/opa
      download: opa
      known_good_version: 0.62.1
      name: opa
      shims:
        - name: opa
          target: opa
    - autogenerated_definition_path: linters/swiftformat
      download: swiftformat
      known_good_version: 0.50.0
      name: swiftformat
      shims:
        - name: swiftformat
          target: swiftformat
    - autogenerated_definition_path: linters/stylelint
      known_good_version: 14.6.1
      name: stylelint
      package: stylelint
      runtime: node
      shims:
        - name: stylelint
          target: stylelint
    - autogenerated_definition_path: linters/biome
      known_good_version: 1.4.1
      name: biome
      package: "@biomejs/biome"
      runtime: node
      shims:
        - name: biome
          target: biome
    - autogenerated_definition_path: linters/hadolint
      download: hadolint
      known_good_version: 2.10.0
      name: hadolint
      shims:
        - name: hadolint
          target: hadolint
    - autogenerated_definition_path: linters/mypy
      known_good_version: 0.931
      name: mypy
      package: mypy
      runtime: python
      shims:
        - name: mypy
          target: mypy
    - autogenerated_definition_path: linters/psscriptanalyzer
      download: psscriptanalyzer
      known_good_version: 1.21.0
      name: psscriptanalyzer
      shims:
        - name: PSScriptAnalyzer.psd1
          target: PSScriptAnalyzer.psd1
    - autogenerated_definition_path: linters/psscriptanalyzer
      download: converttosarif
      known_good_version: 1.0.0
      name: converttosarif
      shims:
        - name: ConvertToSARIF.psd1
          target: ConvertToSARIF.psd1
    - autogenerated_definition_path: linters/trufflehog
      download: trufflehog
      known_good_version: 3.59.0
      name: trufflehog
      shims:
        - name: trufflehog
          target: trufflehog
    - autogenerated_definition_path: linters/brakeman
      known_good_version: 5.4.0
      name: brakeman
      package: brakeman
      runtime: ruby
      shims:
        - name: brakeman
          target: brakeman
    - autogenerated_definition_path: linters/clang-tidy
      download: clang-tidy
      environment:
        - name: PATH
          list:
            - ${linter}/bin
      known_good_version: 16.0.3
      name: clang-tidy
      shims:
        - name: clang-tidy
          target: clang-tidy
    - autogenerated_definition_path: linters/golangci-lint
      known_good_version: 1.46.2
      name: golangci-lint
      package: github.com/golangci/golangci-lint/cmd/golangci-lint
      runtime: go
      shims:
        - name: golangci-lint
          target: golangci-lint
    - autogenerated_definition_path: linters/svgo
      known_good_version: 2.8.0
      name: svgo
      package: svgo
      runtime: node
      shims:
        - name: svgo
          target: svgo
    - autogenerated_definition_path: linters/codespell
      known_good_version: 2.2.2
      name: codespell
      package: codespell
      runtime: python
      shims:
        - name: codespell
          target: codespell
    - autogenerated_definition_path: linters/yapf
      extra_packages:
        - toml
      known_good_version: 0.32.0
      name: yapf
      package: yapf
      runtime: python
      shims:
        - name: yapf
          target: yapf
    - autogenerated_definition_path: linters/gofumpt
      known_good_version: 0.5.0
      name: gofumpt
      package: mvdan.cc/gofumpt
      runtime: go
      shims:
        - name: gofumpt
          target: gofumpt
    - autogenerated_definition_path: linters/actionlint
      download: actionlint
      known_good_version: 1.6.9
      name: actionlint
      shims:
        - name: actionlint
          target: actionlint
    - autogenerated_definition_path: linters/shfmt
      known_good_version: 3.6.0
      name: shfmt
      package: mvdan.cc/sh/v${major_version}/cmd/shfmt
      runtime: go
      shims:
        - name: shfmt
          target: shfmt
    - autogenerated_definition_path: linters/cspell
      known_good_version: 7.0.0
      name: cspell
      package: cspell
      runtime: node
      shims:
        - name: cspell
          target: cspell
    - autogenerated_definition_path: linters/bandit
      known_good_version: 1.7.3
      name: bandit
      package: bandit
      runtime: python
      shims:
        - name: bandit
          target: bandit
    - autogenerated_definition_path: linters/standardrb
      known_good_version: 1.3.0
      name: standardrb
      package: standard
      runtime: ruby
      shims:
        - name: standardrb
          target: standardrb
    - autogenerated_definition_path: linters/isort
      known_good_version: 5.9.3
      name: isort
      package: isort
      runtime: python
      shims:
        - name: isort
          target: isort
    - autogenerated_definition_path: linters/ansible-lint
      extra_packages:
        - ansible
      known_good_version: 6.13.0
      name: ansible-lint
      package: ansible-lint
      runtime: python
      shims:
        - name: ansible-lint
          target: ansible-lint
        - name: ansible
          target: ansible
    - autogenerated_definition_path: linters/terrascan
      download: terrascan
      known_good_version: 1.18.1
      name: terrascan
      shims:
        - name: terrascan
          target: terrascan
    - autogenerated_definition_path: linters/autopep8
      extra_packages:
        - pycodestyle
      known_good_version: 2.0.4
      name: autopep8
      package: autopep8
      runtime: python
      shims:
        - name: autopep8
          target: autopep8
    - autogenerated_definition_path: linters/golines
      known_good_version: 0.11.0
      name: golines
      package: github.com/segmentio/golines
      runtime: go
      shims:
        - name: golines
          target: golines
    - autogenerated_definition_path: linters/cue-fmt
      known_good_version: 0.5.0
      name: cue-fmt
      package: cuelang.org/go/cmd/cue
      runtime: go
      shims:
        - name: cue
          target: cue
    - autogenerated_definition_path: linters/stylua
      download: stylua
      known_good_version: 0.17.0
      name: stylua
      shims:
        - name: stylua
          target: stylua
    - autogenerated_definition_path: linters/sort-package-json
      known_good_version: 2.1.0
      name: sort-package-json
      package: sort-package-json
      runtime: node
      shims:
        - name: sort-package-json
          target: sort-package-json
    - autogenerated_definition_path: linters/markdownlint
      known_good_version: 0.33.0
      name: markdownlint
      package: markdownlint-cli
      runtime: node
      shims:
        - name: markdownlint
          target: markdownlint
    - autogenerated_definition_path: linters/tflint
      download: tflint
      known_good_version: 0.47.0
      name: tflint
      shims:
        - name: tflint
          target: tflint
    - autogenerated_definition_path: linters/semgrep
      known_good_version: 1.33.2
      name: semgrep
      package: semgrep
      runtime: python
      shims:
        - name: semgrep
          target: semgrep
    - autogenerated_definition_path: linters/terragrunt
      download: terragrunt
      known_good_version: 0.45.8
      name: terragrunt
      shims:
        - name: terragrunt
          target: terragrunt
    - autogenerated_definition_path: linters/dart
      download: dart
      environment:
        - name: PATH
          list:
            - ${tool}/bin
      known_good_version: 3.2.6
      name: dart
      shims:
        - name: dart
          target: dart
        - name: dartaotruntime
          target: dartaotruntime
    - autogenerated_definition_path: linters/clang-format
      download: clang-format
      environment:
        - name: PATH
          list:
            - ${tool}/bin
      known_good_version: 14.0.1
      name: clang-format
      shims:
        - name: clang-format
          target: clang-format
    - autogenerated_definition_path: linters/prettier
      known_good_version: 2.6.2
      name: prettier
      package: prettier
      runtime: node
      shims:
        - name: prettier
          target: prettier
    - autogenerated_definition_path: linters/dotenv-linter
      download: dotenv-linter
      known_good_version: 3.3.0
      name: dotenv-linter
      shims:
        - name: dotenv-linter
          target: dotenv-linter
    - autogenerated_definition_path: linters/cfnlint
      known_good_version: 0.58.2
      name: cfnlint
      package: cfn-lint
      runtime: python
      shims:
        - name: cfn-lint
          target: cfn-lint
    - autogenerated_definition_path: linters/taplo
      download: taplo
      known_good_version: 0.8.0
      name: taplo
      shims:
        - name: taplo
          target: taplo
    - autogenerated_definition_path: linters/flake8
      known_good_version: 4.0.1
      name: flake8
      package: flake8
      runtime: python
      shims:
        - name: flake8
          target: flake8
    - autogenerated_definition_path: linters/markdownlint-cli2
      known_good_version: 0.14.0
      name: markdownlint-cli2
      package: markdownlint-cli2
      runtime: node
      shims:
        - name: markdownlint-cli2
          target: markdownlint-cli2
    - autogenerated_definition_path: linters/iwyu
      download: include-what-you-use
      environment:
        - name: PATH
          list:
            - ${tool}/bin
      known_good_version: 0.20
      name: include-what-you-use
      shims:
        - name: include-what-you-use
          target: include-what-you-use
    - autogenerated_definition_path: linters/vale
      download: vale
      environment:
        - name: PATH
          list:
            - ${tool}
            - ${env.PATH}
      known_good_version: 3.4.1
      name: vale
      shims:
        - name: vale
          target: vale
    - autogenerated_definition_path: linters/txtpbfmt
      known_good_version: 0.0.0-20230412060525-fa9f017c0ded
      name: txtpbfmt
      package: github.com/protocolbuffers/txtpbfmt/cmd/txtpbfmt
      runtime: go
      shims:
        - name: txtpbfmt
          target: txtpbfmt
    - autogenerated_definition_path: linters/trunk-toolbox
      download: trunk-toolbox
      known_good_version: 0.5.3
      name: trunk-toolbox
      shims:
        - name: trunk-toolbox
          target: trunk-toolbox
    - autogenerated_definition_path: linters/dustilock
      known_good_version: 1.2.0
      name: dustilock
      package: github.com/checkmarx/dustilock
      runtime: go
      shims:
        - name: dustilock
          target: dustilock
    - autogenerated_definition_path: linters/pylint
      known_good_version: 2.11.1
      name: pylint
      package: pylint
      runtime: python
      shims:
        - name: pylint
          target: pylint
    - autogenerated_definition_path: linters/markdown-table-prettify
      known_good_version: 3.6.0
      name: markdown-table-prettify
      package: markdown-table-prettify
      runtime: node
      shims:
        - name: markdown-table-prettify
          target: markdown-table-prettify
    - autogenerated_definition_path: linters/regal
      download: regal
      known_good_version: 0.18.0
      name: regal
      shims:
        - name: regal
          target: regal
    - autogenerated_definition_path: linters/djlint
      known_good_version: 1.19.16
      name: djlint
      package: djlint
      runtime: python
      shims:
        - name: djlint
          target: djlint
    - autogenerated_definition_path: linters/sqlfluff
      known_good_version: 1.4.5
      name: sqlfluff
      package: sqlfluff
      runtime: python
      shims:
        - name: sqlfluff
          target: sqlfluff
    - autogenerated_definition_path: linters/kube-linter
      known_good_version: 0.6.4
      name: kube-linter
      package: golang.stackrox.io/kube-linter/cmd/kube-linter
      runtime: go
      shims:
        - name: kube-linter
          target: kube-linter
    - autogenerated_definition_path: linters/ruff
      known_good_version: 0.0.250
      name: ruff
      package: ruff
      runtime: python
      shims:
        - name: ruff
          target: ruff
    - autogenerated_definition_path: linters/osv-scanner
      download: osv-scanner
      known_good_version: 1.3.6
      name: osv-scanner
      shims:
        - name: osv-scanner
          target: osv-scanner
    - autogenerated_definition_path: linters/php-cs-fixer
      environment:
        - name: PATH
          list:
            - ${tool}/vendor/bin
      health_checks:
        - command: php-cs-fixer --version
          parse_regex: PHP CS Fixer ${semver}
      known_good_version: 3.54.0
      name: php-cs-fixer
      package: friendsofphp/php-cs-fixer
      runtime: php
      shims:
        - name: php-cs-fixer
          target: php-cs-fixer
    - autogenerated_definition_path: linters/tfsec
      download: tfsec
      known_good_version: 1.28.1
      name: tfsec
      shims:
        - name: tfsec
          target: tfsec
    - autogenerated_definition_path: linters/phpstan
      environment:
        - name: PATH
          list:
            - ${tool}/vendor/bin
      health_checks:
        - command: phpstan --version
          parse_regex: PHP Static Analysis Tool ${semver}
      known_good_version: 1.10.58
      name: phpstan
      package: phpstan/phpstan
      runtime: php
      shims:
        - name: phpstan
          target: phpstan
    - autogenerated_definition_path: linters/rufo
      known_good_version: 0.13.0
      name: rufo
      package: rufo
      runtime: ruby
      shims:
        - name: rufo
          target: rufo
    - autogenerated_definition_path: actions/poetry
      extra_packages:
        - poetry-plugin-export
      health_checks:
        - command: poetry --version
          parse_regex: ${semver}
      known_good_version: 1.8.2
      name: poetry
      package: poetry
      runtime: python
      shims:
        - name: poetry
          target: poetry
    - autogenerated_definition_path: actions/commitizen
      extra_packages:
        - "@commitlint/cli"
        - "@commitlint/config-conventional"
        - "@commitlint/cz-commitlint"
        - inquirer
      known_good_version: 4.3.0
      name: commitizen
      package: commitizen
      runtime: node
      shims:
        - name: commitizen
          target: commitizen
        - name: cz
          target: cz
    - autogenerated_definition_path: tools/diff-so-fancy
      known_good_version: 1.4.3
      name: diff-so-fancy
      package: diff-so-fancy
      runtime: node
      shims:
        - name: diff-so-fancy
          target: diff-so-fancy
    - autogenerated_definition_path: tools/dbt-cli
      download: dbt-cli
      health_checks:
        - command: dbt --version
          parse_regex: dbt Cloud CLI - ${semver}
      known_good_version: 0.38.14
      name: dbt-cli
      shims:
        - name: dbt
          target: dbt
    - autogenerated_definition_path: tools/helm
      download: helm
      known_good_version: 3.9.4
      name: helm
      shims:
        - name: helm
          target: helm
    - autogenerated_definition_path: tools/target-determinator
      download: target-determinator
      known_good_version: 0.3.0
      name: target-determinator
      shims:
        - name: target-determinator
          target: target-determinator
    - autogenerated_definition_path: tools/renovate
      known_good_version: 34.122.0
      name: renovate
      package: renovate
      runtime: node
      shims:
        - name: renovate
          target: renovate
        - name: renovate-config-validator
          target: renovate-config-validator
    - autogenerated_definition_path: tools/terramate
      download: terramate
      known_good_version: 0.4.0
      name: terramate
      shims:
        - name: terramate
          target: terramate
    - autogenerated_definition_path: tools/tailwindcss
      known_good_version: 3.3.5
      name: tailwindcss
      package: tailwindcss
      runtime: node
      shims:
        - name: tailwindcss
          target: tailwindcss
    - autogenerated_definition_path: tools/kubectl
      download: kubectl
      known_good_version: 1.25.16
      name: kubectl
      shims:
        - name: kubectl
          target: kubectl
    - autogenerated_definition_path: tools/ripgrep
      known_good_version: 13.0.0
      name: ripgrep
      package: ripgrep
      runtime: rust
      shims:
        - name: rg
          target: rg
    - autogenerated_definition_path: tools/jq
      download: jq
      known_good_version: 1.7
      name: jq
      shims:
        - name: jq
          target: jq
    - autogenerated_definition_path: tools/ibazel
      download: ibazel
      known_good_version: 0.22.0
      name: ibazel
      shims:
        - name: ibazel
          target: ibazel
    - autogenerated_definition_path: tools/direnv
      download: direnv
      known_good_version: 2.32.3
      name: direnv
      shims:
        - name: direnv
          target: direnv
    - autogenerated_definition_path: tools/assh
      download: assh
      known_good_version: 2.10.0
      name: assh
      shims:
        - name: assh
          target: assh
    - autogenerated_definition_path: tools/amazon-ecr-credential-helper
      download: amazon-ecr-credential-helper
      known_good_version: 0.7.0
      name: amazon-ecr-credential-helper
      shims:
        - name: amazon-ecr-credential-helper
          target: amazon-ecr-credential-helper
    - autogenerated_definition_path: tools/difft
      download: difft
      health_checks:
        - command: difft --version
          parse_regex: Difftastic ${semver}
      known_good_version: 0.56.1
      name: difft
      shims:
        - name: difft
          target: difft
    - autogenerated_definition_path: tools/asciinema
      known_good_version: 2.1.0
      name: asciinema
      package: asciinema
      runtime: python
      shims:
        - name: asciinema
          target: asciinema
    - autogenerated_definition_path: tools/gk
      download: gk
      environment:
        - name: PATH
          list:
            - ${tool}/bin
      known_good_version: 1.2.2
      name: gk
      shims:
        - name: gk
          target: gk
    - autogenerated_definition_path: tools/sfdx
      known_good_version: 2.0.1
      name: sfdx
      package: "@salesforce/cli"
      runtime: node
      shims:
        - name: sfdx
          target: sfdx
        - name: sf
          target: sf
    - autogenerated_definition_path: tools/sentry-cli
      download: sentry-cli
      known_good_version: 1.66.0
      name: sentry-cli
      shims:
        - name: sentry-cli
          target: sentry-cli
    - autogenerated_definition_path: tools/action-validator
      download: action-validator
      known_good_version: 0.5.3
      name: action-validator
      shims:
        - name: action-validator
          target: action-validator
    - autogenerated_definition_path: tools/bazel
      download: bazel
      known_good_version: 6.2.0
      name: bazel
      shims:
        - name: bazel
          target: bazel
    - autogenerated_definition_path: tools/tfupdate
      download: tfupdate
      known_good_version: 0.7.2
      name: tfupdate
      shims:
        - name: tfupdate
          target: tfupdate
    - autogenerated_definition_path: tools/age
      download: age
      known_good_version: 1.1.1
      name: age
      shims:
        - name: age
          target: age
        - name: age-keygen
          target: age-keygen
    - autogenerated_definition_path: tools/sourcery
      known_good_version: 1.2.0
      name: sourcery
      package: sourcery
      runtime: python
      shims:
        - name: sourcery
          target: sourcery
    - autogenerated_definition_path: tools/tfnotify
      download: tfnotify
      known_good_version: 0.8.0
      name: tfnotify
      shims:
        - name: tfnotify
          target: tfnotify
    - autogenerated_definition_path: tools/1password-cli
      download: 1password-cli
      known_good_version: 2.19.0
      name: 1password-cli
      shims:
        - name: op
          target: op
    - autogenerated_definition_path: tools/istioctl
      download: istioctl
      known_good_version: 1.14.6
      name: istioctl
      shims:
        - name: istioctl
          target: istioctl
    - autogenerated_definition_path: tools/phpunit
      environment:
        - name: PATH
          list:
            - ${tool}/vendor/bin
      health_checks:
        - command: phpunit --version
          parse_regex: PHPUnit ${semver}
      known_good_version: 11.1.3
      name: phpunit
      package: phpunit/phpunit
      runtime: php
      shims:
        - name: phpunit
          target: phpunit
    - autogenerated_definition_path: tools/paratest
      environment:
        - name: PATH
          list:
            - ${tool}/vendor/bin
      health_checks:
        - command: paratest --version
          parse_regex: ParaTest v${semver}
      known_good_version: 7.4.3
      name: paratest
      package: brianium/paratest
      runtime: php
      shims:
        - name: paratest
          target: paratest
    - autogenerated_definition_path: tools/aws-amplify
      health_checks:
        - command: amplify version
          parse_regex: ${semver}
      known_good_version: 12.3.0
      name: aws-amplify
      package: "@aws-amplify/cli"
      runtime: node
      shims:
        - name: amplify
          target: amplify
    - autogenerated_definition_path: tools/eksctl
      download: eksctl
      known_good_version: 0.74.0
      name: eksctl
      shims:
        - name: eksctl
          target: eksctl
    - autogenerated_definition_path: tools/platformio
      health_checks:
        - command: pio --version
          parse_regex: PlatformIO Core, version ${semver}
      known_good_version: 6.1.11
      name: platformio
      package: platformio
      runtime: python
      shims:
        - name: pio
          target: pio
    - autogenerated_definition_path: tools/webpack
      extra_packages:
        - webpack-cli
      known_good_version: 5.89.0
      name: webpack
      package: webpack
      runtime: node
      shims:
        - name: webpack
          target: webpack
    - autogenerated_definition_path: tools/clangd-indexing-tools
      download: clangd-indexing-tools
      environment:
        - name: PATH
          value: ${tool}/bin
      health_checks:
        - command: clangd-indexer --version
          parse_regex: LLVM version ${semver}
        - command: clangd-index-server --version
          parse_regex: LLVM version ${semver}
        - command: clangd-index-server-monitor --version
          parse_regex: LLVM version ${semver}
      known_good_version: 16.0.2
      name: clangd-indexing-tools
      shims:
        - name: clangd-indexer
          target: clangd-indexer
        - name: clangd-index-server
          target: clangd-index-server
        - name: clangd-index-server-monitor
          target: clangd-index-server-monitor
    - autogenerated_definition_path: tools/terraformer
      download: terraformer
      known_good_version: 0.8.24
      name: terraformer
      shims:
        - name: terraformer
          target: terraformer
    - autogenerated_definition_path: tools/goreleaser
      known_good_version: 1.25.1
      name: goreleaser
      package: github.com/goreleaser/goreleaser
      runtime: go
      shims:
        - name: goreleaser
          target: goreleaser
    - autogenerated_definition_path: tools/dotnet
      download: dotnet
      environment:
        - name: DOTNET_ROOT
          value: ${linter}
        - name: USERPROFILE
          optional: true
          value: ${env.USERPROFILE}
      known_good_version: 7.0.400
      name: dotnet
      shims:
        - name: dotnet
          target: dotnet
    - autogenerated_definition_path: tools/tofu
      download: tofu
      known_good_version: 1.6.2
      name: tofu
      shims:
        - name: tofu
          target: tofu
    - autogenerated_definition_path: tools/tfmigrate
      download: tfmigrate
      known_good_version: 0.3.14
      name: tfmigrate
      shims:
        - name: tfmigrate
          target: tfmigrate
    - autogenerated_definition_path: tools/yarn
      download: yarn
      known_good_version: 1.22.19
      name: yarn
      shims:
        - name: yarn
          target: yarn
    - autogenerated_definition_path: tools/air
      download: air
      known_good_version: 1.44.0
      name: air
      shims:
        - name: air
          target: air
    - autogenerated_definition_path: tools/act
      download: act
      known_good_version: 0.2.49
      name: act
      shims:
        - name: act
          target: act
    - autogenerated_definition_path: tools/alp
      download: alp
      known_good_version: 1.0.14
      name: alp
      shims:
        - name: alp
          target: alp
    - autogenerated_definition_path: tools/terraform-switcher
      download: terraform-switcher
      known_good_version: 0.13.1308
      name: terraform-switcher
      shims:
        - name: tfswitch
          target: tfswitch
    - autogenerated_definition_path: tools/terraform-docs
      download: terraform-docs
      known_good_version: 0.16.0
      name: terraform-docs
      shims:
        - name: terraform-docs
          target: terraform-docs
    - autogenerated_definition_path: tools/bazel-differ
      known_good_version: 0.0.5
      name: bazel-differ
      package: github.com/ewhauser/bazel-differ/cli
      runtime: go
      shims:
        - name: bazel-differ
          target: cli
    - autogenerated_definition_path: tools/awscli
      known_good_version: 1.29.30
      name: awscli
      package: awscli
      runtime: python
      shims:
        - name: aws
          target: aws
    - autogenerated_definition_path: tools/pnpm
      download: pnpm
      known_good_version: 8.6.1
      name: pnpm
      shims:
        - name: pnpm
          target: pnpm
    - autogenerated_definition_path: tools/ts-node
      health_checks:
        - command: ts-node --version
          parse_regex: ${semver}
      known_good_version: 10.9.1
      name: ts-node
      package: ts-node
      runtime: node
      shims:
        - name: ts-node
          target: ts-node
    - autogenerated_definition_path: tools/prisma
      known_good_version: 4.16.1
      name: prisma
      package: prisma
      runtime: node
      shims:
        - name: prisma
          target: prisma
    - autogenerated_definition_path: tools/tsc
      health_checks:
        - command: tsc --version
          parse_regex: Version ${semver}
      known_good_version: 5.2.2
      name: tsc
      package: typescript
      runtime: node
      shims:
        - name: tsc
          target: tsc
    - autogenerated_definition_path: tools/docker-credential-ecr-login
      download: docker-credential-ecr-login
      known_good_version: 0.8.0
      name: docker-credential-ecr-login
      shims:
        - name: docker-credential-ecr-login
          target: docker-credential-ecr-login
    - autogenerated_definition_path: tools/circleci
      download: circleci
      known_good_version: 0.1.28528
      name: circleci
      shims:
        - name: circleci
          target: circleci
    - autogenerated_definition_path: tools/agebox
      download: agebox
      known_good_version: 0.6.1
      name: agebox
      shims:
        - name: agebox
          target: agebox
    - autogenerated_definition_path: tools/gulp
      known_good_version: 4.0.2
      name: gulp
      package: gulp
      runtime: node
      shims:
        - name: gulp
          target: gulp
    - autogenerated_definition_path: tools/clangd
      download: clangd
      environment:
        - name: PATH
          value: ${tool}/bin
      health_checks:
        - command: clangd --version
          parse_regex: clangd version ${semver}
      known_good_version: 16.0.2
      name: clangd
      shims:
        - name: clangd
          target: clangd
    - autogenerated_definition_path: tools/minikube
      download: minikube
      known_good_version: 1.24.0
      name: minikube
      shims:
        - name: minikube
          target: minikube
    - autogenerated_definition_path: tools/gt
      known_good_version: 1.0.0
      name: gt
      package: "@withgraphite/graphite-cli"
      runtime: node
      shims:
        - name: gt
          target: gt
    - autogenerated_definition_path: tools/gh
      download: gh
      environment:
        - name: PATH
          list:
            - ${tool}/bin
      known_good_version: 2.27.0
      name: gh
      shims:
        - name: gh
          target: gh
    - autogenerated_definition_path: tools/grpcui
      download: grpcui
      health_checks:
        - check_stderr: true
          command: grpcui --version
          parse_regex: grpcui v${semver}
      known_good_version: 1.4.1
      name: grpcui
      shims:
        - name: grpcui
          target: grpcui
    - autogenerated_definition_path: tools/adr
      download: adr
      environment:
        - name: PATH
          list:
            - ${tool}/src
      known_good_version: 3.0.0
      name: adr
      shims:
        - name: adr
          target: adr
    - autogenerated_definition_path: tools/tree-sitter
      download: tree-sitter
      known_good_version: 0.20.8
      name: tree-sitter
      shims:
        - name: tree-sitter
          target: tree-sitter
    - autogenerated_definition_path: tools/yq
      download: yq
      health_checks:
        - command: yq --version
          parse_regex: version v${semver}
      known_good_version: 4.44.1
      name: yq
      shims:
        - name: yq
          target: yq
    - autogenerated_definition_path: tools/deno
      download: deno
      known_good_version: 1.36.4
      name: deno
      shims:
        - name: deno
          target: deno
    - autogenerated_definition_path: tools/terraform
      download: terraform
      known_good_version: 1.1.4
      name: terraform
      shims:
        - name: terraform
          target: terraform
    - autogenerated_definition_path: tools/pwsh
      download: pwsh
      known_good_version: 7.4.1
      name: pwsh
      shims:
        - name: pwsh
          target: pwsh